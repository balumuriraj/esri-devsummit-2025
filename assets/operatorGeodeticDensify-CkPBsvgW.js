const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/OperatorGeodeticDensifyByLength-B-ItsK7p.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/ProjectionTransformation-BnkVBIoa.js","assets/index-CCasRUIN.js","assets/index-4rsQkLC1.css"])))=>i.map(i=>d[i]);
import{bZ as i,dk as s,dl as a,dm as c}from"./index-CCasRUIN.js";import{s as _}from"./SimpleGeometryCursor-B92kdZ15.js";let r;function f(){return!!r&&a()}async function p(){if(!f()){const[e,n]=await Promise.all([i(()=>import("./OperatorGeodeticDensifyByLength-B-ItsK7p.js"),__vite__mapDeps([0,1,2,3,4])),i(()=>import("./ProjectionTransformation-BnkVBIoa.js").then(t=>t.bF),__vite__mapDeps([2,1,3,4])).then(t=>t.aG).then(({injectPe:t})=>t),s()]);r=new e.OperatorGeodeticDensifyByLength,n(c)}}function d(e,n,t,o){return r.execute(e,n,t,o,null)}function y(e,n,t,o){const u=r.executeMany(new _(e),n,t,o,null);return Array.from(u)}function P(){return r.supportsCurves()}export{P as a,y as c,p as i,f as s,d as u};
