import{dZ as s,d_ as n,bx as d,aL as u,aN as l}from"./index-BuurUjNy.js";import{d as g}from"./FeatureLayerView2D-0MmTY_TV.js";import"./featureConversionUtils-CBlorucq.js";import"./OptimizedFeatureSet-DWrxeG6N.js";import"./memoryEstimations-CMT4SzJ5.js";import"./OptimizedGeometry-ctYdNoIG.js";import"./timeSupport-Cg4c0Evx.js";import"./AttributeBinsFeatureSet-CL7d-U2a.js";import"./AttributeBinsQuery-nI2H9Fke.js";import"./queryUtils-DnEZcHAW.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-BGAbcxrt.js";import"./LayerView-CQVnlvN8.js";import"./Container-DSpu0Eal.js";import"./TechniqueInstance-kKLNFxbl.js";import"./UpdateTracking2D-C6bLgmat.js";import"./dataViewUtils-TvsUr7hm.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-j-OHa0PB.js";import"./FramebufferObject-B1BskXlu.js";import"./VertexArrayObject-D8BUTeor.js";import"./TileContainer-5EG0iL3t.js";import"./WGLContainer-LmHVZ1Cq.js";import"./ProgramTemplate-CamO9WjC.js";import"./vec3f32-nZdmKIgz.js";import"./config-CIMzMD-H.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-CQ9Aznlk.js";import"./CIMSymbolHelper-C_-iIFr_.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-DmUOgodR.js";import"./Rect-BgwV4lPu.js";import"./rasterizingUtils-DZu30vQ7.js";import"./floatRGBA-CkSho6R2.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-BBarpPRO.js";import"./ShaderBuilder-BhBi3jJv.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-BinXpWME.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-D9zNBCgB.js";import"./parquet-DLKErZGP.js";import"./popupUtils-AJkLP1Q-.js";import"./RefreshableLayerView-CoTae4Wq.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const pi=i;export{pi as default};
