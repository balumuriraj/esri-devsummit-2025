import{dZ as s,d_ as n,bx as d,aL as u,aN as l}from"./index-CCasRUIN.js";import{d as g}from"./FeatureLayerView2D-DTfM8K_w.js";import"./featureConversionUtils-DG--BN25.js";import"./OptimizedFeatureSet-BySVQm4M.js";import"./memoryEstimations-XpIXu6m4.js";import"./OptimizedGeometry-W9iDIloo.js";import"./timeSupport-Cpw-Afon.js";import"./AttributeBinsFeatureSet-CFaLL5US.js";import"./AttributeBinsQuery-COzpwK_v.js";import"./queryUtils-mxa1_Aw5.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-CyiwYAkT.js";import"./LayerView-SggrsYJk.js";import"./Container-t6WLSGQe.js";import"./TechniqueInstance-gtOZ8gLR.js";import"./UpdateTracking2D-BQJMCJnF.js";import"./dataViewUtils-B7UbnxDp.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-Ck_0T0bt.js";import"./FramebufferObject-CsnKGiBy.js";import"./VertexArrayObject-BE_UeYb1.js";import"./TileContainer-DudTFQgK.js";import"./WGLContainer-B5qjCnAQ.js";import"./ProgramTemplate-DgFCCuum.js";import"./vec3f32-nZdmKIgz.js";import"./config-CKZ6K-Ri.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-DuzuizWX.js";import"./CIMSymbolHelper-C-PNUGx1.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-CpwBOD2U.js";import"./Rect-CND4lKvw.js";import"./rasterizingUtils-BtVmLiFr.js";import"./floatRGBA-C6fWWT-b.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-lx78Pxat.js";import"./ShaderBuilder-DyTQgr8N.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-9E1AR8Dw.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-DI0RBIgG.js";import"./parquet-CanranXy.js";import"./popupUtils-NlxQmt5B.js";import"./RefreshableLayerView-akuVIWN9.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const pi=i;export{pi as default};
