const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/OperatorGeodeticLength-Dt6gpSiK.js","assets/index-CCasRUIN.js","assets/index-4rsQkLC1.css","assets/MapImageLayer-BVG6PhbL.js","assets/QueryTask-D8hx0Y3Y.js","assets/query-Bb8GNNrv.js","assets/pbfQueryUtils-Dp5ijlqP.js","assets/pbf-CcUfFpaw.js","assets/memoryEstimations-XpIXu6m4.js","assets/OptimizedGeometry-W9iDIloo.js","assets/OptimizedFeatureSet-BySVQm4M.js","assets/executeQueryJSON-C9J4R_di.js","assets/featureConversionUtils-DG--BN25.js","assets/SceneLayerWorker-CqqwZCbW.js","assets/MeshLocalVertexSpace-CdbW0z9P.js","assets/vec3-CAnrSJC1.js","assets/projectVectorToVector-CoL21o2h.js","assets/projectPointToVector-CsbvifDl.js","assets/sphere-CA-5SYw6.js","assets/mat3f64-q3fE-ZOt.js","assets/plane-DC7tgE9D.js","assets/mat4f64-Dk4dwAN8.js","assets/quatf64-aQ5IuZRd.js","assets/I3SBinaryReader-CH9byT-C.js","assets/VertexAttribute-Cq4MnHjR.js","assets/edgeUtils-Q-kNT7go.js","assets/floatRGBA-C6fWWT-b.js","assets/NormalAttribute.glsl-DNucGW3Q.js","assets/glsl-BH37Aalp.js","assets/ShaderOutput-DnYY5J1_.js","assets/BindType-BBwFZqyN.js","assets/orientedBoundingBox-C0vAKTcX.js","assets/quat-B58fUHkx.js","assets/spatialReferenceEllipsoidUtils-3uG47glO.js","assets/computeTranslationToOriginAndRotation-BWf8TM_C.js","assets/popupUtils-NlxQmt5B.js","assets/associatedFeatureServiceUtils-Brlt-VTO.js","assets/SketchOptions-VqAfPbyS.js","assets/geodesicUtils-Dn5u4cJ-.js","assets/utils-Bd2Oa3Rp.js","assets/quantizationUtils-CEM-XgEu.js","assets/FeatureLayerSource-DuOOqZEG.js","assets/meshVertexSpaceUtils-Cc_LTFxS.js","assets/External-w9mZRFRU.js","assets/MeshTransform-DNIYtyfU.js","assets/axisAngleDegrees-7w5gWKnW.js","assets/editingSupport-D4NAI69H.js","assets/clientSideDefaults-AsnWcuHN.js","assets/QueryEngineCapabilities-B_pTbIiR.js","assets/layersCreator-BCaVxLw-.js","assets/loadUtils-DSDmaklo.js","assets/fetchService-BTqS3yAx.js","assets/lazyLayerLoader-CuZ13ZGo.js","assets/portalLayers-BKPSlzUo.js","assets/saveUtils-Dm9AB9GR.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/ImageryTileLayerView2D-C8bYbgXK.js","assets/RasterVFDisplayObject-ClWo_jNP.js","assets/VertexArrayObject-BE_UeYb1.js","assets/VertexElementDescriptor-BLyltQyJ.js","assets/dataUtils-vj_cSZ2R.js","assets/WGLContainer-B5qjCnAQ.js","assets/dataViewUtils-B7UbnxDp.js","assets/BoundingBox-Ck_0T0bt.js","assets/ProgramTemplate-DgFCCuum.js","assets/vec3f32-nZdmKIgz.js","assets/Container-t6WLSGQe.js","assets/config-CKZ6K-Ri.js","assets/earcut-D9gy186-.js","assets/LayerView-SggrsYJk.js","assets/rasterUtils-GglxJ1vw.js","assets/VertexStream-eQ6dxpCe.js","assets/utils-l99LVrZ4.js","assets/FramebufferObject-CsnKGiBy.js","assets/TileContainer-DudTFQgK.js","assets/rasterProjectionHelper-D0g-2Gv_.js","assets/timeSupport-Cpw-Afon.js","assets/RefreshableLayerView-akuVIWN9.js","assets/RasterWorker-DYLltFgF.js","assets/_commonjsHelpers-DCkdB7M8.js","assets/ElevationLayer-C7IBrjMM.js","assets/WorkerHandle-Ny6eBZma.js","assets/editingTools-C7E8e4Jv.js","assets/interfaces-DXvCqfhl.js","assets/VerticalOffset.glsl-CUGHQ5-3.js","assets/Indices-DAC-tmc9.js","assets/InterleavedLayout-BXidN2-6.js","assets/BufferView-BFWskoDl.js","assets/triangle-DUlWus67.js","assets/lineSegment-4wjH6G2N.js","assets/renderState-ChA8KnxB.js","assets/boundedPlane-D5HzG0LR.js","assets/requestImageUtils-DUvv2hBj.js","assets/TextureFormat-1mYWTFa-.js","assets/ShaderBuilder-DyTQgr8N.js","assets/triangulationUtils-BaSuHXc4.js","assets/deduplicate--r6f5Q5X.js","assets/RibbonLine.glsl-DehupRkM.js","assets/HUDVisibility.glsl-C6iSIq9N.js","assets/doublePrecisionUtils-B0owpBza.js","assets/hydratedFeatures-Bc0vz6UQ.js","assets/Octree-DwLnbmeJ.js","assets/HUDMaterial.glsl-CCcJuLvE.js","assets/NestedMap-GuqgquCN.js","assets/RouteLayerInteraction-DUVMWxRw.js","assets/GraphicsLayer-R_dqldM1.js","assets/RouteLayerView2D-CTELVKDW.js","assets/GraphicContainer-BmJ5tdAP.js","assets/AGraphicContainer-BCaT68D6.js","assets/TechniqueInstance-gtOZ8gLR.js","assets/UpdateTracking2D-BQJMCJnF.js","assets/FeatureCommandQueue-DuzuizWX.js","assets/CIMSymbolHelper-C-PNUGx1.js","assets/BidiEngine-QXap_35O.js","assets/fontUtils-CpwBOD2U.js","assets/Rect-CND4lKvw.js","assets/rasterizingUtils-BtVmLiFr.js","assets/TechniqueType-uMFRS8dR.js","assets/GraphShaderModule-lx78Pxat.js","assets/QueueProcessor-9E1AR8Dw.js","assets/GraphicsView2D-DEb6cU3H.js","assets/OverrideHelper-BFr5-Efp.js","assets/FeatureMetadata-85pzlv7s.js","assets/queryUtils-mxa1_Aw5.js","assets/json-Wa8cmqdu.js","assets/timeSupport-BC7Fc8xc.js","assets/TimeOnly-BeIN966s.js","assets/dehydratedFeatures-B_DgQ-a8.js","assets/automaticLengthMeasurementUtils-CfMzBTos.js","assets/memoize-DmxaQ-k8.js","assets/geodesicLengthMeasurementUtils-Ct4aKs9p.js","assets/geometryEngineBase-B0ZyeKAX.js","assets/hydrated-OQlVY2eD.js","assets/glUtil-DvuvX8rT.js","assets/automaticAreaMeasurementUtils-DM-wsW5M.js","assets/PointSnappingHint-CPQ6tTY4.js","assets/editPlaneUtils-CaFGf9Mp.js","assets/ReactiveSet-DX2QBHZn.js","assets/SelectedVertexTooltipInfo-ptR9MP2n.js","assets/TranslateTooltipInfo-C16YQRom.js","assets/ExtentScaleTooltipInfo-BMWzUDYC.js","assets/GraphicManipulator-D3Wy7gmW.js","assets/drapedUtils-Dppiwm9S.js","assets/KMLLayerView2D-i4jI7mz-.js","assets/BitmapTechnique-Dc25qTsv.js","assets/BitmapContainer-qcNS5yZy.js","assets/MaterialPrograms-CLR0KQyh.js","assets/webglDeps-c3yI9a2o.js","assets/testSVGPremultipliedAlpha-DMU9LCDN.js","assets/FeatureLayerView2D-DTfM8K_w.js","assets/AttributeBinsFeatureSet-CFaLL5US.js","assets/AttributeBinsQuery-COzpwK_v.js","assets/FixedIntervalBinParameters-CyiwYAkT.js","assets/CircularArray-CujHzHWW.js","assets/SDFHelper-DI0RBIgG.js","assets/parquet-CanranXy.js","assets/knowledgegraph-B5ARK9HH.js","assets/arcade-MjNlzZF_.js","assets/unitConversion-BOFUXCl3.js","assets/ImmutableArray-BPVd6ESQ.js","assets/shared-DJe_-sJH.js","assets/number-DwwUc6ea.js","assets/WhereClause-BxKF9q8u.js","assets/portalUtils-CAyvw0MI.js","assets/executeQueryForSnapping-DYz6RGzF.js","assets/PooledRBush-CtvaHitF.js","assets/optimizedFeatureQueryEngineAdapter-PN0-4Fl_.js","assets/QueryEngine-DhJb9WSU.js","assets/WhereClauseCache-C_tyPnsp.js","assets/SnappingCandidate-DGkpYqI6.js","assets/MemorySourceWorker-Cz-N8hHa.js","assets/sourceUtils-BzHCShhb.js","assets/date-Ctp1FiBW.js","assets/MediaLayerView2D-N6CaEYVh.js","assets/enums-BRzLM11V.js","assets/GridShader-DFKs3E4o.js","assets/PieChartMeshWriter-CXawq4_F.js","assets/libtess-BPfI4qTa.js","assets/utils-BzfqwBvk.js","assets/grouping-CnNyuMqa.js","assets/OverlayContainer-CNTRJYbM.js","assets/utils-ehcGqGxa.js","assets/FeaturePipelineWorker-DX2y_rX2.js","assets/MeshWriterRegistry-B8phN5kx.js","assets/operatorGeodeticDensify-CkPBsvgW.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/geodeticCurveType-CirnHLSB.js","assets/geojson-CiROkDV-.js","assets/PointCloudWorker-CH9N2Jnq.js","assets/uploadAssets-BZnXq7D5.js","assets/meshFeatureAttributes-Cw3Eagre.js","assets/SourceLayerData-Dhzsd2m5.js","assets/VideoLayerView2D-Dd3p3cQx.js","assets/webdocSaveUtils-CKeU3bai.js","assets/basemapUtils-BhLAYO9e.js","assets/resourceUtils-ChGPyRVz.js","assets/WFSSourceWorker-B35XjjxU.js","assets/WMSLayerView2D-mJHMBuid.js","assets/ExportStrategy-DSo490d5.js","assets/ProjectionTransformation-BnkVBIoa.js","assets/jsonConverter-C24B79eG.js","assets/operators-CkMqlQZs.js","assets/apiConverter-Bazampn-.js","assets/operatorGeodesicBuffer-HOrZqk7k.js","assets/operatorBuffer-BjzHFmg2.js","assets/GeometryCleaner-BEJM7I4l-CP489GXS.js","assets/operatorConvexHull-CffrZkUr.js","assets/OperatorCrosses-tjGdINvt.js","assets/operatorIntersection-BYvWBiPf.js","assets/OperatorIntersects-Bl8WBZDB.js","assets/operatorOffset-C599CrCU.js","assets/OperatorOverlaps-Dk8ndSgz.js","assets/operatorSimplify-Cfxt8g0t.js","assets/OperatorTouches-BNsNrksB.js","assets/operatorUnion-Bo0NLdHa.js","assets/OperatorWithin-DsoVpsLd.js","assets/MeshComponent-BNpJA8Yy.js","assets/meshProperties-C4iW0Ukm.js","assets/MeshVertexAttributes-ZHH7undV.js","assets/vec4-BQB9hcIJ.js","assets/loader-z18g9DVS.js","assets/objectResourceUtils-BR8rlZ_-.js","assets/RealisticTree.glsl-CAA6M_hp.js","assets/vertexSpaceConversion-DxhiOY_R.js","assets/featureLayerUtils-U-_dOUEK.js"])))=>i.map(i=>d[i]);
import{bZ as C,bm as _,a7 as S,ei as F,ej as $,ek as N,b_ as P}from"./index-CCasRUIN.js";import{s as V}from"./associatedFeatureServiceUtils-Brlt-VTO.js";import{t as f,i as b,a as k}from"./fetchService-BTqS3yAx.js";import{a as J}from"./lazyLayerLoader-CuZ13ZGo.js";const x={FeatureLayer:!0,SceneLayer:!0};async function Z(a){const{properties:s,url:e}=a,t={...s,url:e},l=await M(e,s==null?void 0:s.customParameters),{Constructor:r,layerId:o,sourceJSON:u,parsedUrl:c,layers:y,tables:d}=l;if(y.length+d.length===0)return o!=null&&(t.layerId=o),u!=null&&(t.sourceJSON=u),new r(t);const p=new(await C(async()=>{const{default:w}=await import("./OperatorGeodeticLength-Dt6gpSiK.js").then(v=>v.d);return{default:w}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224]))).default({title:c.title});return await E(p,l,t),p}function O(a,s){return a?a.find(({id:e})=>e===s):null}function T(a,s,e,t,l){const r={...l,layerId:s};return a!=null&&(r.url=a),e!=null&&(r.sourceJSON=e),"sublayerTitleMode"in t.prototype&&(r.sublayerTitleMode="service-name"),new t(r)}async function E(a,s,e){const t=s.sublayerConstructorProvider;for(const{id:l,serverUrl:r}of s.layers){const o=O(s.sublayerInfos,l),u=T(r,l,o,(o&&(t==null?void 0:t(o)))??s.Constructor,e);a.add(u)}if(s.tables.length){const l=await h("FeatureLayer");s.tables.forEach(({id:r,serverUrl:o})=>{const u=T(o,r,O(s.tableInfos,r),l,e);a.tables.add(u)})}}async function M(a,s){var d,p,w,v,I,g,L;let e=_(a);if(e==null&&(e=await D(a,s)),e==null)throw new S("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:a});const{serverType:t,sublayer:l}=e;let r;const o={FeatureServer:"FeatureLayer",KnowledgeGraphServer:"KnowledgeGraphLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer",VideoServer:"VideoLayer"},u=t==="FeatureServer",c=t==="SceneServer",y={parsedUrl:e,Constructor:null,layerId:u||c?l??void 0:void 0,layers:[],tables:[]};switch(t){case"MapServer":if(l!=null){const{type:n}=await f(a,{customParameters:s});switch(r="FeatureLayer",n){case"Catalog Layer":r="CatalogLayer";break;case"Catalog Dynamic Group Layer":throw new S("arcgis-layers:unsupported",`fromUrl() not supported for "${n}" layers`)}}else r=await A(a,s)?"TileLayer":"MapImageLayer";break;case"ImageServer":{const n=await f(a,{customParameters:s}),{tileInfo:i,cacheType:m}=n;r=i?((d=i==null?void 0:i.format)==null?void 0:d.toUpperCase())!=="LERC"||m&&m.toLowerCase()!=="elevation"?"ImageryTileLayer":"ElevationLayer":"ImageryLayer";break}case"SceneServer":{const n=await f(e.url.path,{customParameters:s});if(r="SceneLayer",n){const i=n==null?void 0:n.layers;if((n==null?void 0:n.layerType)==="Voxel")r="VoxelLayer";else if(i!=null&&i.length){const m=(p=i[0])==null?void 0:p.layerType;m!=null&&P[m]!=null&&(r=P[m])}}break}case"3DTilesServer":throw new S("arcgis-layers:unsupported","fromUrl() not supported for 3DTiles layers");case"FeatureServer":if(r="FeatureLayer",l!=null){const n=await f(a,{customParameters:s});y.sourceJSON=n,r=b(n.type)}break;default:r=o[t]}if(x[r]&&l==null){const n=await G(a,t,s);if(u&&(y.sublayerInfos=n.layerInfos,y.tableInfos=n.tableInfos),n.layers.length+n.tables.length!==1)y.layers=n.layers,y.tables=n.tables,u&&((w=n.layerInfos)!=null&&w.length)&&(y.sublayerConstructorProvider=await K(n.layerInfos));else if(u||c){const i=((v=n.layerInfos)==null?void 0:v[0])??((I=n.tableInfos)==null?void 0:I[0]);if(y.layerId=((g=n.layers[0])==null?void 0:g.id)??((L=n.tables[0])==null?void 0:L.id),y.sourceJSON=i,u){const m=i==null?void 0:i.type;r=b(m)}}}return y.Constructor=await h(r),y}async function D(a,s){var u;const e=await f(a,{customParameters:s});let t=null,l=null;const r=e.type;if(r==="Feature Layer"||r==="Table"?(t="FeatureServer",l=e.id??null):r==="indexedVector"?t="VectorTileServer":e.hasOwnProperty("mapName")?t="MapServer":e.hasOwnProperty("bandCount")&&e.hasOwnProperty("pixelSizeX")?t="ImageServer":e.hasOwnProperty("maxRecordCount")&&e.hasOwnProperty("allowGeometryUpdates")?t="FeatureServer":e.hasOwnProperty("streamUrls")?t="StreamServer":U(e)?(t="SceneServer",l=e.id):e.hasOwnProperty("layers")&&U((u=e.layers)==null?void 0:u[0])&&(t="SceneServer"),!t)return null;const o=l!=null?F(a):null;return{title:o!=null&&e.name||N(a),serverType:t,sublayer:l,url:{path:o!=null?o.serviceUrl:$(a).path}}}function U(a){return a!=null&&a.hasOwnProperty("store")&&a.hasOwnProperty("id")&&typeof a.id=="number"}async function G(a,s,e){let t,l,r=!1;switch(s){case"FeatureServer":{const c=await k(a,{customParameters:e});r=!!c.layersJSON,t=c.layersJSON||c.serviceJSON;break}case"SceneServer":{const c=await R(a,e);t=c.serviceInfo,l=c.tableServerUrl;break}default:t=await f(a,{customParameters:e})}const o=t==null?void 0:t.layers,u=t==null?void 0:t.tables;return{layers:(o==null?void 0:o.map(c=>({id:c.id})).reverse())||[],tables:(u==null?void 0:u.map(c=>({serverUrl:l,id:c.id})).reverse())||[],layerInfos:r?o:[],tableInfos:r?u:[]}}async function R(a,s){var l;const e=await f(a,{customParameters:s});if(!((l=e.layers)==null?void 0:l[0]))return{serviceInfo:e};try{const{serverUrl:r}=await V(a),o=await f(r,{customParameters:s}).catch(()=>null);return o&&(e.tables=o.tables),{serviceInfo:e,tableServerUrl:r}}catch{return{serviceInfo:e}}}async function h(a){return(0,J[a])()}async function A(a,s){return(await f(a,{customParameters:s})).tileInfo}async function K(a){if(!a.length)return;const s=new Set,e=[];for(const{type:r}of a)s.has(r)||(s.add(r),e.push(h(b(r))));const t=await Promise.all(e),l=new Map;return Array.from(s).forEach((r,o)=>{l.set(r,t[o])}),r=>l.get(r.type)}export{Z as fromUrl};
