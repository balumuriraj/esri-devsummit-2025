import{eY as O,av as U,fp as E,c1 as F,fq as V,a9 as X,dz as D,fr as W,fs as z,aL as s,aM as l,aN as q}from"./index-CCasRUIN.js";import{l as H,u as I,t as N}from"./gridUtils-Tz-XdT2Z.js";import{f as m,d as T,c as _}from"./SketchOptions-VqAfPbyS.js";import{r as G,a as k}from"./RouteLayerInteraction-DUVMWxRw.js";import"./geodesicUtils-Dn5u4cJ-.js";import"./plane-DC7tgE9D.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-CA-5SYw6.js";import"./projectVectorToVector-CoL21o2h.js";import"./projectPointToVector-CsbvifDl.js";import"./GraphicsLayer-R_dqldM1.js";import"./RouteLayerView2D-CTELVKDW.js";import"./LayerView-SggrsYJk.js";import"./Container-t6WLSGQe.js";import"./GraphicContainer-BmJ5tdAP.js";import"./AGraphicContainer-BCaT68D6.js";import"./TechniqueInstance-gtOZ8gLR.js";import"./UpdateTracking2D-BQJMCJnF.js";import"./dataViewUtils-B7UbnxDp.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-Ck_0T0bt.js";import"./FramebufferObject-CsnKGiBy.js";import"./VertexArrayObject-BE_UeYb1.js";import"./memoryEstimations-XpIXu6m4.js";import"./TileContainer-DudTFQgK.js";import"./WGLContainer-B5qjCnAQ.js";import"./ProgramTemplate-DgFCCuum.js";import"./vec3f32-nZdmKIgz.js";import"./config-CKZ6K-Ri.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-DG--BN25.js";import"./OptimizedFeatureSet-BySVQm4M.js";import"./OptimizedGeometry-W9iDIloo.js";import"./FeatureCommandQueue-DuzuizWX.js";import"./CIMSymbolHelper-C-PNUGx1.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-CpwBOD2U.js";import"./Rect-CND4lKvw.js";import"./rasterizingUtils-BtVmLiFr.js";import"./floatRGBA-C6fWWT-b.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-lx78Pxat.js";import"./ShaderBuilder-DyTQgr8N.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-9E1AR8Dw.js";import"./GraphicsView2D-DEb6cU3H.js";import"./OverrideHelper-BFr5-Efp.js";import"./quantizationUtils-CEM-XgEu.js";import"./FeatureMetadata-85pzlv7s.js";import"./queryUtils-mxa1_Aw5.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BC7Fc8xc.js";import"./TimeOnly-BeIN966s.js";import"./dehydratedFeatures-B_DgQ-a8.js";let o=class extends O{constructor(t){super(t),this.options=null}destroy(){this._set("options",null)}get grid(){return this.view.grid}get effectiveViewRotation(){var t;return(t=this.grid)!=null&&t.rotateWithMap?0:U(this.view.rotation??0)}get gridRotation(){var t;return U(((t=this.grid)==null?void 0:t.rotation)??0)}get gridCenter(){var e;const{spatialReference:t,grid:i}=this;if(!i||!t||!E(i.center.spatialReference,t))return null;try{const r=F(i.center,t),n=t.isWrappable&&((e=this.view)==null?void 0:e.center)!=null?V(r.x,this.view.center.x,t):r.x;return m(n,r.y,r.z)}catch(r){return X.getLogger(this).errorOnce("Grid Snapping - Failed to project grid center.",r),null}}get offsetScaleFactor(){const{pixelsPerStride:t,grid:i}=this;if(!i||!t)return 1;const{majorLineInterval:e,dynamicScaling:r}=i;return e<1?null:H(e,t,r)}get spatialReference(){return this.view.spatialReference}get gridMetersPerStride(){const{grid:t}=this;return t?D(t.spacing,t.units,"meters"):null}get viewMetersPerPixel(){const{viewMetersPerSRUnit:t}=this;return t==null?null:t*W(this.view.scale,this.view.spatialReference)}get viewMetersPerSRUnit(){const{spatialReference:t}=this.view;return this.gridCenter?I(this.gridCenter[0],this.gridCenter[1],t):null}get pixelsPerStride(){const{gridMetersPerStride:t,viewMetersPerPixel:i}=this;return i&&t?t/i:null}get updating(){return this.grid!=null&&this.spatialReference!=null&&this.viewMetersPerSRUnit==null}async fetchCandidates(t,i,e){var u;const{options:r,view:n}=this;if(!(r!=null&&r.effectiveGridEnabled)||!n.grid||(u=e.feature)!=null&&u.attributes&&T in e.feature.attributes)return[];const p=e.coordinateHelper.arrayToPoint(t),a=r.distance*(e.pointer==="touch"?r.touchSensitivityMultiplier:1);return this.fetchCandidatesSync(p,a)}fetchCandidatesSync(t,i){const e=[],{grid:r,effectiveViewRotation:n,gridRotation:p,gridCenter:a,viewMetersPerPixel:u,viewMetersPerSRUnit:f,offsetScaleFactor:S,spatialReference:g,gridMetersPerStride:C,pixelsPerStride:$}=this;if(!(r&&u&&f&&a&&g&&S&&C&&$)||!r.dynamicScaling&&$<N||!E(t.spatialReference,g))return e;const y=F(t,g),Y=m(y.x,y.y,y.z),c=h(Y,-p,a,-n),P=C/f*S,d=A(c,P,a),{shouldSnapX:v,shouldSnapY:w}=B(d,c,i,u,f);if(!v&&!w)return[];const j=m((v?d:c)[0],(w?d:c)[1]),M=h(j,p,a,n),b=h(d,p,a,n);if(w){const R=L(d,c,P,"y"),x=h(R,p,a,n);e.push(new G({lineStart:b,lineEnd:x,targetPoint:M,isDraped:!1}))}if(v){const R=L(d,c,P,"x"),x=h(R,p,a,n);e.push(new G({lineStart:b,lineEnd:x,targetPoint:M,isDraped:!1}))}return v&&w&&e.push(new k(M,e[0],e[1],!1)),e}};s([l({constructOnly:!0})],o.prototype,"view",void 0),s([l()],o.prototype,"options",void 0),s([l()],o.prototype,"grid",null),s([l()],o.prototype,"effectiveViewRotation",null),s([l()],o.prototype,"gridRotation",null),s([l()],o.prototype,"gridCenter",null),s([l()],o.prototype,"offsetScaleFactor",null),s([l()],o.prototype,"spatialReference",null),s([l()],o.prototype,"gridMetersPerStride",null),s([l()],o.prototype,"viewMetersPerPixel",null),s([l()],o.prototype,"viewMetersPerSRUnit",null),s([l()],o.prototype,"pixelsPerStride",null),s([l()],o.prototype,"updating",null),o=s([q("esri.views.interactive.snapping.GridSnappingEngine")],o);const h=(t,i,e,r)=>{const n=_(t[0],t[1],t[2]);return z(n,z(n,n,e,i),e,r)},A=(t,i,e)=>{const r=(t[0]-e[0])/i,n=(t[1]-e[1])/i,p=Math.trunc(r),a=Math.trunc(n),u=Math.round(r%1),f=Math.round(n%1),S=e[0]+(p+u)*i,g=e[1]+(a+f)*i;return m(S,g)},B=(t,i,e,r,n)=>{if(r<=0)return{shouldSnapX:!1,shouldSnapY:!1};const p=(t[0]-i[0])/r,a=(t[1]-i[1])/r;return{shouldSnapX:Math.abs(p*n)<e,shouldSnapY:Math.abs(a*n)<e}},L=(t,i,e,r)=>{if(r==="y"){const p=i[0]>t[0]?1:-1;return m(t[0]+e*p,t[1])}const n=i[1]>t[1]?1:-1;return m(t[0],t[1]+e*n)};export{o as GridSnappingEngine};
