import{c as l,i as o,k as m,iy as d,o as p,aC as y,et as C,es as N,a9 as h}from"./CodeBlock-DBIw63CI.js";import"./index-BYYG-xAB.js";let t=class extends l{constructor(r){super(r),this.namedTraceConfigurations=[]}};o([m({type:[d],json:{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}}})],t.prototype,"namedTraceConfigurations",void 0),t=o([p("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")],t);const S=t;async function $(r,s,i){const e=y(r),a=s.toJSON();s.globalIds&&s.globalIds.length>0&&(a.globalIds=JSON.stringify(s.globalIds)),s.creators&&s.creators.length>0&&(a.creators=JSON.stringify(s.creators)),s.tags&&s.tags.length>0&&(a.tags=JSON.stringify(s.tags)),s.names&&s.names.length>0&&(a.names=JSON.stringify(s.names));const n={...a,f:"json"},g=C({...e.query,...n}),c=N(g,{...i,method:"post"}),u=`${e.path}/traceConfigurations/query`,{data:f}=await h(u,c);return S.fromJSON(f)}export{$ as queryNamedTraceConfigurations};
