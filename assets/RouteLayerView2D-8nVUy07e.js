const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/RouteLayerInteraction-Bs39bHu1.js","assets/index-szNj1aqA.js","assets/index-4rsQkLC1.css","assets/GraphicsLayer-CGIk0gza.js","assets/SketchOptions-C13bRAAG.js","assets/geodesicUtils-DIa9g3Co.js","assets/plane-B-bok-4y.js","assets/mat3f64-q3fE-ZOt.js","assets/mat4f64-Dk4dwAN8.js","assets/quatf64-aQ5IuZRd.js","assets/sphere-DTYho6l_.js","assets/projectVectorToVector-gprHIGOt.js","assets/projectPointToVector-2wdg5tcU.js"])))=>i.map(i=>d[i]);
import{cR as C,aD as S,nj as et,aL as e,aM as r,cU as F,nk as rt,dn as d,nl as N,cP as D,nm as st,nn as at,no as ot,np as nt,aN as f,nq as U,bF as j,dj as Y,d$ as A,nr as _,ns as B,aQ as Q,nt as I,nu as V,nv as m,nw as T,nx as P,c0 as lt,ny as J,bD as x,kg as ut,dZ as W,hF as pt,d_ as dt,c5 as k,aa as it,bZ as ct}from"./index-szNj1aqA.js";import{S as mt,y as yt}from"./LayerView-DzzgUDD7.js";import{t as ht}from"./GraphicContainer-BG4_-9KT.js";import{A as bt}from"./GraphicsView2D--hr1K6LQ.js";let c=class extends C.ClonableMixin(S){constructor(i){super(i),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(i,s){return s.id??s.itemId??null}readRestrictionAttributes(i,s){const{restrictionAttributeNames:o}=s;return o==null?null:o.map(u=>et.fromJSON(u))}writeRestrictionAttributes(i,s,o){i!=null&&(s[o]=i.map(u=>et.toJSON(u)))}};e([r({type:[Object],json:{write:!0}})],c.prototype,"attributeParameterValues",void 0),e([r({type:String,json:{write:!0}})],c.prototype,"description",void 0),e([F(rt,{ignoreUnknown:!1})],c.prototype,"distanceAttributeName",void 0),e([r({type:String,json:{write:!0}})],c.prototype,"id",void 0),e([d("id",["id","itemId"])],c.prototype,"readId",null),e([F(N,{ignoreUnknown:!1})],c.prototype,"impedanceAttributeName",void 0),e([r({type:String,json:{write:!0}})],c.prototype,"name",void 0),e([r({type:[String],json:{write:!0}})],c.prototype,"restrictionAttributeNames",void 0),e([d("restrictionAttributeNames")],c.prototype,"readRestrictionAttributes",null),e([D("restrictionAttributeNames")],c.prototype,"writeRestrictionAttributes",null),e([r({type:Number,json:{write:{allowNull:!0}}})],c.prototype,"simplificationTolerance",void 0),e([F(st)],c.prototype,"simplificationToleranceUnits",void 0),e([F(at,{ignoreUnknown:!1})],c.prototype,"timeAttributeName",void 0),e([F(ot)],c.prototype,"type",void 0),e([r({type:Boolean,json:{write:!0}})],c.prototype,"useHierarchy",void 0),e([F(nt)],c.prototype,"uturnAtJunctions",void 0),c=e([f("esri.rest.support.TravelMode")],c);const Tt=c;function g(t,i){if(t==null)return null;const s={},o=new RegExp(`^${i}`,"i");for(const u of Object.keys(t))if(o.test(u)){const w=u.slice(i.length);s[N.fromJSON(w)]=t[u]}return s}function K(t,i,s){if(t!=null){i.attributes||(i.attributes={});for(const o in t){const u=N.toJSON(o);i.attributes[`${s}${u}`]=t[o]}}}function M(t){const i={};for(const s of Object.keys(t)){const o=s;i[N.fromJSON(o)]=t[s]}return i}function E(t){const i={};for(const s of Object.keys(t)){const o=s;i[N.toJSON(o)]=t[s]}return i}function $(t,i){return t==null||i==null?null:Math.round((t-i)/6e4)}function Jt(t){var o,u,w;const i=t.toJSON(),s=i;return s.accumulateAttributeNames&&(s.accumulateAttributeNames=(o=i.accumulateAttributeNames)==null?void 0:o.join()),s.attributeParameterValues&&(s.attributeParameterValues=JSON.stringify(i.attributeParameterValues)),s.barriers&&(s.barriers=JSON.stringify(i.barriers)),s.outSR&&(s.outSR=(u=i.outSR)==null?void 0:u.wkid),s.overrides&&(s.overrides=JSON.stringify(i.overrides)),s.polygonBarriers&&(s.polygonBarriers=JSON.stringify(i.polygonBarriers)),s.polylineBarriers&&(s.polylineBarriers=JSON.stringify(i.polylineBarriers)),s.restrictionAttributeNames&&(s.restrictionAttributeNames=(w=i.restrictionAttributeNames)==null?void 0:w.join()),s.stops&&(s.stops=JSON.stringify(i.stops)),s.travelMode&&(s.travelMode=JSON.stringify(i.travelMode)),s}var G;let y=G=class extends C.ClonableMixin(S){constructor(t){super(t),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line"}static fromGraphic(t){return new G({directionLineType:U.fromJSON(t.attributes.DirectionLineType),directionPointId:t.attributes.DirectionPointID,distance:t.attributes.Meters,duration:t.attributes.Minutes,fromLevel:t.attributes.FromLevel??null,geometry:t.geometry,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,symbol:t.symbol,toLevel:t.attributes.ToLevel??null})}toGraphic(){const t={ObjectID:this.objectId,DirectionLineType:this.directionLineType!=null?U.toJSON(this.directionLineType):null,DirectionPointID:this.directionPointId,Meters:this.distance,Minutes:this.duration};return this.fromLevel!=null&&(t.FromLevel=this.fromLevel),this.toLevel!=null&&(t.ToLevel=this.toLevel),new j({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};y.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger"},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger"},{name:"FromLevel",alias:"From Level",type:"esriFieldTypeInteger"},{name:"Meters",alias:"Meters",type:"esriFieldTypeDouble"},{name:"Minutes",alias:"Minutes",type:"esriFieldTypeDouble"},{name:"ToLevel",alias:"To Level",type:"esriFieldTypeInteger"}],e([r({type:U.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:U.read}}})],y.prototype,"directionLineType",void 0),e([r({json:{read:{source:"attributes.DirectionPointID"}}})],y.prototype,"directionPointId",void 0),e([r({json:{read:{source:"attributes.Meters"}}})],y.prototype,"distance",void 0),e([r({json:{read:{source:"attributes.Minutes"}}})],y.prototype,"duration",void 0),e([r({json:{read:{source:"attributes.FromLevel"}}})],y.prototype,"fromLevel",void 0),e([r({type:Y})],y.prototype,"geometry",void 0),e([r({json:{read:{source:"attributes.ObjectID"}}})],y.prototype,"objectId",void 0),e([r({type:A})],y.prototype,"popupTemplate",void 0),e([r({types:_})],y.prototype,"symbol",void 0),e([r({json:{read:{source:"attributes.ToLevel"}}})],y.prototype,"toLevel",void 0),e([r({readOnly:!0,json:{read:!1}})],y.prototype,"type",void 0),y=G=e([f("esri.rest.support.DirectionLine")],y);const vt=y;var R;let l=R=class extends C.ClonableMixin(S){constructor(t){super(t),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null}readArrivalTime(t,i){return i.attributes.ArrivalTime!=null?new Date(i.attributes.ArrivalTime):null}static fromGraphic(t){return new R({alternateName:t.attributes.AlternateName??null,arrivalTime:t.attributes.ArrivalTime!=null?new Date(t.attributes.ArrivalTime):null,arrivalTimeOffset:t.attributes.ArrivalUTCOffset??null,azimuth:t.attributes.Azimuth??null,branchName:t.attributes.BranchName??null,directionPointType:B.fromJSON(t.attributes.DirectionPointType),displayText:t.attributes.DisplayText??null,exitName:t.attributes.ExitName??null,geometry:t.geometry,intersectingName:t.attributes.IntersectingName??null,level:t.attributes.Level??null,name:t.attributes.Name??null,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,sequence:t.attributes.Sequence,shortVoiceInstruction:t.attributes.ShortVoiceInstruction??null,stopId:t.attributes.StopID??null,symbol:t.symbol,towardName:t.attributes.TowardName??null,voiceInstruction:t.attributes.VoiceInstruction??null})}toGraphic(){const t={ObjectID:this.objectId,DirectionPointType:this.directionPointType!=null?B.toJSON(this.directionPointType):null,Sequence:this.sequence,StopID:this.stopId};return this.alternateName!=null&&(t.AlternateName=this.alternateName),this.arrivalTime!=null&&(t.ArrivalTime=this.arrivalTime.getTime()),this.arrivalTimeOffset!=null&&(t.ArrivalUTCOffset=this.arrivalTimeOffset),this.azimuth!=null&&(t.Azimuth=this.azimuth),this.branchName!=null&&(t.BranchName=this.branchName),this.displayText!=null&&(t.DisplayText=this.displayText),this.exitName!=null&&(t.ExitName=this.exitName),this.intersectingName!=null&&(t.IntersectingName=this.intersectingName),this.level!=null&&(t.Level=this.level),this.name!=null&&(t.Name=this.name),this.shortVoiceInstruction!=null&&(t.ShortVoiceInstruction=this.shortVoiceInstruction),this.towardName!=null&&(t.TowardName=this.towardName),this.voiceInstruction!=null&&(t.VoiceInstruction=this.voiceInstruction),new j({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};l.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AlternateName",alias:"Alternative Name",type:"esriFieldTypeString"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time Offset",type:"esriFieldTypeInteger"},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble"},{name:"BranchName",alias:"Branch Name",type:"esriFieldTypeString"},{name:"DirectionPointType",alias:"Directions Point Type",type:"esriFieldTypeInteger"},{name:"DisplayText",alias:"Display Text",type:"esriFieldTypeString"},{name:"ExitName",alias:"Exit Name",type:"esriFieldTypeString"},{name:"IntersectingName",alias:"Intersecting Name",type:"esriFieldTypeString"},{name:"Level",alias:"Level",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ShortVoiceInstruction",alias:"Short Voice Instruction",type:"esriFieldTypeString"},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger"},{name:"TowardName",alias:"Toward Name",type:"esriFieldTypeString"},{name:"VoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString"}],e([r({json:{read:{source:"attributes.AlternateName"}}})],l.prototype,"alternateName",void 0),e([r({type:Date})],l.prototype,"arrivalTime",void 0),e([d("arrivalTime",["attributes.ArrivalTime"])],l.prototype,"readArrivalTime",null),e([r({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],l.prototype,"arrivalTimeOffset",void 0),e([r({json:{read:{source:"attributes.Azimuth"}}})],l.prototype,"azimuth",void 0),e([r({json:{read:{source:"attributes.BranchName"}}})],l.prototype,"branchName",void 0),e([r({type:B.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:B.read}}})],l.prototype,"directionPointType",void 0),e([r({json:{read:{source:"attributes.DisplayText"}}})],l.prototype,"displayText",void 0),e([r({json:{read:{source:"attributes.ExitName"}}})],l.prototype,"exitName",void 0),e([r({type:Q})],l.prototype,"geometry",void 0),e([r({json:{read:{source:"attributes.IntersectingName"}}})],l.prototype,"intersectingName",void 0),e([r({json:{read:{source:"attributes.Level"}}})],l.prototype,"level",void 0),e([r({json:{read:{source:"attributes.Name"}}})],l.prototype,"name",void 0),e([r({json:{read:{source:"attributes.ObjectID"}}})],l.prototype,"objectId",void 0),e([r({type:A})],l.prototype,"popupTemplate",void 0),e([r({json:{read:{source:"attributes.Sequence"}}})],l.prototype,"sequence",void 0),e([r({json:{read:{source:"attributes.ShortVoiceInstruction"}}})],l.prototype,"shortVoiceInstruction",void 0),e([r({json:{read:{source:"attributes.StopID"}}})],l.prototype,"stopId",void 0),e([r({types:_})],l.prototype,"symbol",void 0),e([r({json:{read:{source:"attributes.TowardName"}}})],l.prototype,"towardName",void 0),e([r({readOnly:!0,json:{read:!1}})],l.prototype,"type",void 0),e([r({json:{read:{source:"attributes.VoiceInstruction"}}})],l.prototype,"voiceInstruction",void 0),l=R=e([f("esri.rest.support.DirectionPoint")],l);const gt=l;var q;let p=q=class extends C.ClonableMixin(S){constructor(t){super(t),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(t,i){return g(i.attributes,"Attr_")}writeCosts(t,i){K(t,i,"Attr_")}static fromGraphic(t){return new q({addedCost:t.attributes.AddedCost??null,barrierType:t.attributes.BarrierType!=null?T.fromJSON(t.attributes.BarrierType):null,costs:t.attributes.Costs!=null?M(JSON.parse(t.attributes.Costs)):null,curbApproach:t.attributes.CurbApproach!=null?m.fromJSON(t.attributes.CurbApproach):null,fullEdge:t.attributes.FullEdge!=null?V.fromJSON(t.attributes.FullEdge):null,geometry:t.geometry,name:t.attributes.Name??null,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,status:t.attributes.Status!=null?I.fromJSON(t.attributes.Status):null,symbol:t.symbol})}toGraphic(){const t={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:this.barrierType!=null?T.toJSON(this.barrierType):null,Costs:this.costs!=null?JSON.stringify(E(this.costs)):null,CurbApproach:this.curbApproach!=null?m.toJSON(this.curbApproach):null,FullEdge:this.fullEdge!=null?V.toJSON(this.fullEdge):null,Name:this.name,Status:this.status!=null?I.toJSON(this.status):null};return new j({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};p.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"}],e([r()],p.prototype,"addedCost",void 0),e([r({type:T.apiValues,json:{name:"attributes.BarrierType",read:{reader:T.read},write:{writer:T.write}}})],p.prototype,"barrierType",void 0),e([r()],p.prototype,"costs",void 0),e([d("costs",["attributes"])],p.prototype,"readCosts",null),e([D("costs")],p.prototype,"writeCosts",null),e([r({type:m.apiValues,json:{read:{source:"attributes.CurbApproach",reader:m.read}}})],p.prototype,"curbApproach",void 0),e([r({type:V.apiValues,json:{name:"attributes.FullEdge",read:{reader:V.read},write:{writer:V.write}}})],p.prototype,"fullEdge",void 0),e([r({type:Q,json:{write:!0}})],p.prototype,"geometry",void 0),e([r({json:{name:"attributes.Name"}})],p.prototype,"name",void 0),e([r({json:{name:"attributes.ObjectID"}})],p.prototype,"objectId",void 0),e([r({type:A})],p.prototype,"popupTemplate",void 0),e([r({type:P.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:P.read}}})],p.prototype,"sideOfEdge",void 0),e([r({json:{read:{source:"attributes.SourceID"}}})],p.prototype,"sourceId",void 0),e([r({json:{read:{source:"attributes.SourceOID"}}})],p.prototype,"sourceOid",void 0),e([r({type:I.apiValues,json:{read:{source:"attributes.Status",reader:I.read}}})],p.prototype,"status",void 0),e([r({types:_})],p.prototype,"symbol",void 0),e([r({readOnly:!0,json:{read:!1}})],p.prototype,"type",void 0),p=q=e([f("esri.rest.support.PointBarrier")],p);const ft=p;var H;let h=H=class extends C.ClonableMixin(S){constructor(t){super(t),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(t,i){return g(i.attributes,"Attr_")}writeCosts(t,i){K(t,i,"Attr_")}static fromGraphic(t){return new H({barrierType:t.attributes.BarrierType!=null?T.fromJSON(t.attributes.BarrierType):null,costs:t.attributes.Costs!=null?M(JSON.parse(t.attributes.Costs)):null,geometry:t.geometry,name:t.attributes.Name??null,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,scaleFactor:t.attributes.ScaleFactor??null,symbol:t.symbol})}toGraphic(){const t={ObjectID:this.objectId,BarrierType:this.barrierType!=null?T.toJSON(this.barrierType):null,Costs:this.costs!=null?JSON.stringify(E(this.costs)):null,Name:this.name??null,ScaleFactor:this.scaleFactor??null};return new j({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};h.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}],e([r({type:T.apiValues,json:{name:"attributes.BarrierType",read:{reader:T.read},write:{writer:T.write}}})],h.prototype,"barrierType",void 0),e([r()],h.prototype,"costs",void 0),e([d("costs",["attributes"])],h.prototype,"readCosts",null),e([D("costs")],h.prototype,"writeCosts",null),e([r({type:lt,json:{write:!0}})],h.prototype,"geometry",void 0),e([r({json:{name:"attributes.Name"}})],h.prototype,"name",void 0),e([r({json:{name:"attributes.ObjectID"}})],h.prototype,"objectId",void 0),e([r({type:A})],h.prototype,"popupTemplate",void 0),e([r()],h.prototype,"scaleFactor",void 0),e([r({types:_})],h.prototype,"symbol",void 0),e([r({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0),h=H=e([f("esri.rest.support.PolygonBarrier")],h);const St=h;var z;let b=z=class extends C.ClonableMixin(S){constructor(t){super(t),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier"}readCosts(t,i){return g(i.attributes,"Attr_")}static fromGraphic(t){return new z({barrierType:t.attributes.BarrierType!=null?T.fromJSON(t.attributes.BarrierType):null,costs:t.attributes.Costs!=null?M(JSON.parse(t.attributes.Costs)):null,geometry:t.geometry,name:t.attributes.Name??null,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,scaleFactor:t.attributes.ScaleFactor??null,symbol:t.symbol})}toGraphic(){const t={ObjectID:this.objectId,BarrierType:this.barrierType!=null?T.toJSON(this.barrierType):null,Costs:this.costs!=null?JSON.stringify(E(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new j({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};b.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}],e([r({type:T.apiValues,json:{read:{source:"attributes.BarrierType",reader:T.read}}})],b.prototype,"barrierType",void 0),e([r()],b.prototype,"costs",void 0),e([d("costs",["attributes"])],b.prototype,"readCosts",null),e([r({type:Y,json:{write:!0}})],b.prototype,"geometry",void 0),e([r({json:{name:"attributes.Name"}})],b.prototype,"name",void 0),e([r({json:{name:"attributes.ObjectID"}})],b.prototype,"objectId",void 0),e([r({type:A})],b.prototype,"popupTemplate",void 0),e([r()],b.prototype,"scaleFactor",void 0),e([r({types:_})],b.prototype,"symbol",void 0),e([r({readOnly:!0,json:{read:!1}})],b.prototype,"type",void 0),b=z=e([f("esri.rest.support.PolylineBarrier")],b);const wt=b;let v=class extends S{constructor(t){super(t),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(t){return t==null?null:t.map(i=>N.fromJSON(i))}writeAccumulateAttributes(t,i,s){t!=null&&t.length&&(i[s]=t.map(o=>N.toJSON(o)))}};e([r({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],v.prototype,"accumulateAttributes",void 0),e([d("accumulateAttributes")],v.prototype,"readAccumulateAttributes",null),e([D("accumulateAttributes")],v.prototype,"writeAccumulateAttributes",null),e([r({type:String,json:{write:!0}})],v.prototype,"directionsLanguage",void 0),e([r({type:Boolean,json:{write:!0}})],v.prototype,"findBestSequence",void 0),e([r({type:Boolean,json:{write:!0}})],v.prototype,"preserveFirstStop",void 0),e([r({type:Boolean,json:{write:!0}})],v.prototype,"preserveLastStop",void 0),e([r({type:Boolean,json:{write:!0}})],v.prototype,"startTimeIsUTC",void 0),e([r({type:Boolean,json:{write:!0}})],v.prototype,"timeWindowsAreUTC",void 0),e([r({type:Tt,json:{write:!0}})],v.prototype,"travelMode",void 0),v=e([f("esri.rest.support.RouteSettings")],v);const Ot=v;var Z;let n=Z=class extends C.ClonableMixin(S){constructor(t){super(t),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(t,i){return i.attributes.EndTimeUTC!=null?new Date(i.attributes.EndTimeUTC):null}readEndTimeOffset(t,i){return $(i.attributes.EndTime,i.attributes.EndTimeUTC)}readStartTime(t,i){return i.attributes.StartTimeUTC!=null?new Date(i.attributes.StartTimeUTC):null}readStartTimeOffset(t,i){return $(i.attributes.StartTime,i.attributes.StartTimeUTC)}readTotalCosts(t,i){return g(i.attributes,"Total_")}readTotalViolations(t,i){return g(i.attributes,"TotalViolation_")}readTotalWait(t,i){return g(i.attributes,"TotalWait_")}static fromGraphic(t){return new Z({analysisSettings:t.attributes.AnalysisSettings!=null?Ot.fromJSON(JSON.parse(t.attributes.AnalysisSettings)):null,endTime:t.attributes.EndTime!=null?new Date(t.attributes.EndTime):null,endTimeOffset:t.attributes.EndUTCOffset??null,geometry:t.geometry,messages:t.attributes.Messages!=null?JSON.parse(t.attributes.Messages):null,name:t.attributes.RouteName,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,startTime:t.attributes.StartTime!=null?new Date(t.attributes.StartTime):null,startTimeOffset:t.attributes.StartUTCOffset??null,symbol:t.symbol,totalCosts:t.attributes.TotalCosts!=null?M(JSON.parse(t.attributes.TotalCosts)):null,totalDistance:t.attributes.TotalMeters??null,totalDuration:t.attributes.TotalMinutes??null,totalLateDuration:t.attributes.TotalLateMinutes??null,totalWaitDuration:t.attributes.TotalWaitMinutes??null,version:t.attributes.Version})}toGraphic(){const t={ObjectID:this.objectId,AnalysisSettings:this.analysisSettings!=null?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:this.endTime!=null?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:this.messages!=null?JSON.stringify(this.messages):null,RouteName:this.name,StartTime:this.startTime!=null?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:this.totalCosts!=null?JSON.stringify(E(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:this.version};return new j({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};n.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString"},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate"},{name:"EndUTCOffset",alias:"End Time Offset",type:"esriFieldTypeInteger"},{name:"Messages",alias:"Messages",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate"},{name:"StartUTCOffset",alias:"Start Time Offset",type:"esriFieldTypeInteger"},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString"},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble"},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble"},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble"},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble"},{name:"Version",alias:"Version",type:"esriFieldTypeString"}],e([r()],n.prototype,"analysisSettings",void 0),e([r({type:Date})],n.prototype,"endTime",void 0),e([d("endTime",["attributes.EndTimeUTC"])],n.prototype,"readEndTime",null),e([r()],n.prototype,"endTimeOffset",void 0),e([d("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],n.prototype,"readEndTimeOffset",null),e([r({json:{read:{source:"attributes.FirstStopID"}}})],n.prototype,"firstStopId",void 0),e([r({type:Y})],n.prototype,"geometry",void 0),e([r({json:{read:{source:"attributes.LastStopID"}}})],n.prototype,"lastStopId",void 0),e([r()],n.prototype,"messages",void 0),e([r({json:{read:{source:"attributes.Name"}}})],n.prototype,"name",void 0),e([r({json:{read:{source:"attributes.ObjectID"}}})],n.prototype,"objectId",void 0),e([r({type:A})],n.prototype,"popupTemplate",void 0),e([r({type:Date})],n.prototype,"startTime",void 0),e([d("startTime",["attributes.StartTimeUTC"])],n.prototype,"readStartTime",null),e([r()],n.prototype,"startTimeOffset",void 0),e([d("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],n.prototype,"readStartTimeOffset",null),e([r({json:{read:{source:"attributes.StopCount"}}})],n.prototype,"stopCount",void 0),e([r({types:_})],n.prototype,"symbol",void 0),e([r()],n.prototype,"totalCosts",void 0),e([d("totalCosts",["attributes"])],n.prototype,"readTotalCosts",null),e([r()],n.prototype,"totalDistance",void 0),e([r()],n.prototype,"totalDuration",void 0),e([r()],n.prototype,"totalLateDuration",void 0),e([r()],n.prototype,"totalViolations",void 0),e([d("totalViolations",["attributes"])],n.prototype,"readTotalViolations",null),e([r()],n.prototype,"totalWait",void 0),e([d("totalWait",["attributes"])],n.prototype,"readTotalWait",null),e([r()],n.prototype,"totalWaitDuration",void 0),e([r({readOnly:!0,json:{read:!1}})],n.prototype,"type",void 0),e([r()],n.prototype,"version",void 0),n=Z=e([f("esri.rest.support.RouteInfo")],n);const It=n;var X;let a=X=class extends C.ClonableMixin(S){constructor(t){super(t),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(t,i){return $(i.attributes.ArriveTime,i.attributes.ArriveTimeUTC)}readCumulativeCosts(t,i){return g(i.attributes,"Cumul_")}readDepartTimeOffset(t,i){return $(i.attributes.DepartTime,i.attributes.DepartTimeUTC)}readServiceCosts(t,i){return g(i.attributes,"Attr_")}writeServiceCosts(t,i){K(t,i,"Attr_")}writeTimeWindowEnd(t,i){t!=null&&(i.attributes||(i.attributes={}),i.attributes.TimeWindowEnd=t.getTime())}writeTimeWindowStart(t,i){t!=null&&(i.attributes||(i.attributes={}),i.attributes.TimeWindowStart=t.getTime())}readViolations(t,i){return g(i.attributes,"Violation_")}readWait(t,i){return g(i.attributes,"Wait_")}static fromGraphic(t){return new X({arriveCurbApproach:t.attributes.ArrivalCurbApproach!=null?m.fromJSON(t.attributes.ArrivalCurbApproach):null,arriveTime:t.attributes.ArrivalTime!=null?new Date(t.attributes.ArrivalTime):null,arriveTimeOffset:t.attributes.ArrivalUTCOffset,cumulativeCosts:t.attributes.CumulativeCosts!=null?M(JSON.parse(t.attributes.CumulativeCosts)):null,cumulativeDistance:t.attributes.CumulativeMeters??null,cumulativeDuration:t.attributes.CumulativeMinutes??null,curbApproach:t.attributes.CurbApproach!=null?m.fromJSON(t.attributes.CurbApproach):null,departCurbApproach:t.attributes.DepartureCurbApproach!=null?m.fromJSON(t.attributes.DepartureCurbApproach):null,departTime:t.attributes.DepartureTime!=null?new Date(t.attributes.DepartureTime):null,departTimeOffset:t.attributes.DepartureUTCOffset??null,geometry:t.geometry,lateDuration:t.attributes.LateMinutes??null,locationType:t.attributes.LocationType!=null?J.fromJSON(t.attributes.LocationType):null,name:t.attributes.Name,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,routeName:t.attributes.RouteName,sequence:t.attributes.Sequence??null,serviceCosts:t.attributes.ServiceCosts!=null?M(JSON.parse(t.attributes.ServiceCosts)):null,serviceDistance:t.attributes.ServiceMeters??null,serviceDuration:t.attributes.ServiceMinutes??null,status:t.attributes.Status!=null?I.fromJSON(t.attributes.Status):null,symbol:t.symbol,timeWindowEnd:t.attributes.TimeWindowEnd!=null?new Date(t.attributes.TimeWindowEnd):null,timeWindowEndOffset:t.attributes.TimeWindowEndUTCOffset??null,timeWindowStart:t.attributes.TimeWindowStart!=null?new Date(t.attributes.TimeWindowStart):null,timeWindowStartOffset:t.attributes.TimeWindowStartUTCOffset??null,waitDuration:t.attributes.WaitMinutes??null})}toGraphic(){const t={ObjectID:this.objectId,ArrivalCurbApproach:this.arriveCurbApproach!=null?m.toJSON(this.arriveCurbApproach):null,ArrivalTime:this.arriveTime!=null?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:this.cumulativeCosts!=null?JSON.stringify(E(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:this.curbApproach!=null?m.toJSON(this.curbApproach):null,DepartureCurbApproach:this.departCurbApproach!=null?m.toJSON(this.departCurbApproach):null,DepartureTime:this.departTime!=null?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:this.locationType!=null?J.toJSON(this.locationType):null,Name:this.name,RouteName:this.routeName,Sequence:this.sequence,ServiceCosts:this.serviceCosts!=null?JSON.stringify(E(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:this.status!=null?I.toJSON(this.status):null,TimeWindowEnd:this.timeWindowEnd!=null?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:this.timeWindowEndOffset??this.arriveTimeOffset,TimeWindowStart:this.timeWindowStart!=null?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:this.timeWindowStartOffset??this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new j({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};a.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time",type:"esriFieldTypeInteger"},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString"},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble"},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate"},{name:"DepartureUTCOffset",alias:"Departure Time",type:"esriFieldTypeInteger"},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble"},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString"},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble"},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate"},{name:"TimeWindowEndUTCOffset",alias:"Time Window End Offset",type:"esriFieldTypeInteger"},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate"},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start Offset",type:"esriFieldTypeInteger"},{name:"WaitMinutes",alias:"Minutes Wait",type:"esriFieldTypeDouble"}],e([r({type:m.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:m.read}}})],a.prototype,"arriveCurbApproach",void 0),e([r({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],a.prototype,"arriveTime",void 0),e([r()],a.prototype,"arriveTimeOffset",void 0),e([d("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],a.prototype,"readArriveTimeOffset",null),e([r({json:{name:"attributes.Bearing",read:!1,write:!0}})],a.prototype,"bearing",void 0),e([r({json:{name:"attributes.BearingTol",read:!1,write:!0}})],a.prototype,"bearingTol",void 0),e([r()],a.prototype,"cumulativeCosts",void 0),e([d("cumulativeCosts",["attributes"])],a.prototype,"readCumulativeCosts",null),e([r()],a.prototype,"cumulativeDistance",void 0),e([r()],a.prototype,"cumulativeDuration",void 0),e([r({type:m.apiValues,json:{name:"attributes.CurbApproach",read:{reader:m.read},write:{writer:m.write}}})],a.prototype,"curbApproach",void 0),e([r({type:m.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:m.read}}})],a.prototype,"departCurbApproach",void 0),e([r({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],a.prototype,"departTime",void 0),e([r()],a.prototype,"departTimeOffset",void 0),e([d("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],a.prototype,"readDepartTimeOffset",null),e([r({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],a.prototype,"distanceToNetworkInMeters",void 0),e([r({type:Q,json:{write:!0}})],a.prototype,"geometry",void 0),e([r()],a.prototype,"lateDuration",void 0),e([r({type:J.apiValues,json:{name:"attributes.LocationType",read:{reader:J.read},write:{writer:J.write}}})],a.prototype,"locationType",void 0),e([r({json:{name:"attributes.Name"}})],a.prototype,"name",void 0),e([r({json:{name:"attributes.NavLatency",read:!1,write:!0}})],a.prototype,"navLatency",void 0),e([r({json:{name:"attributes.ObjectID"}})],a.prototype,"objectId",void 0),e([r({type:A})],a.prototype,"popupTemplate",void 0),e([r({json:{read:{source:"attributes.PosAlong"}}})],a.prototype,"posAlong",void 0),e([r({json:{name:"attributes.RouteName"}})],a.prototype,"routeName",void 0),e([r()],a.prototype,"serviceCosts",void 0),e([d("serviceCosts",["attributes"])],a.prototype,"readServiceCosts",null),e([D("serviceCosts")],a.prototype,"writeServiceCosts",null),e([r()],a.prototype,"serviceDistance",void 0),e([r()],a.prototype,"serviceDuration",void 0),e([r({json:{name:"attributes.Sequence"}})],a.prototype,"sequence",void 0),e([r({type:P.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:P.read}}})],a.prototype,"sideOfEdge",void 0),e([r({json:{read:{source:"attributes.SnapX"}}})],a.prototype,"snapX",void 0),e([r({json:{read:{source:"attributes.SnapY"}}})],a.prototype,"snapY",void 0),e([r({json:{read:{source:"attributes.SnapZ"}}})],a.prototype,"snapZ",void 0),e([r({json:{read:{source:"attributes.SourceID"}}})],a.prototype,"sourceId",void 0),e([r({json:{read:{source:"attributes.SourceOID"}}})],a.prototype,"sourceOid",void 0),e([r({type:I.apiValues,json:{read:{source:"attributes.Status",reader:I.read}}})],a.prototype,"status",void 0),e([r({types:_})],a.prototype,"symbol",void 0),e([r({type:Date,json:{name:"attributes.TimeWindowEnd"}})],a.prototype,"timeWindowEnd",void 0),e([D("timeWindowEnd")],a.prototype,"writeTimeWindowEnd",null),e([r()],a.prototype,"timeWindowEndOffset",void 0),e([r({type:Date,json:{name:"attributes.TimeWindowStart"}})],a.prototype,"timeWindowStart",void 0),e([D("timeWindowStart")],a.prototype,"writeTimeWindowStart",null),e([r()],a.prototype,"timeWindowStartOffset",void 0),e([r({readOnly:!0,json:{read:!1}})],a.prototype,"type",void 0),e([r()],a.prototype,"violations",void 0),e([d("violations",["attributes"])],a.prototype,"readViolations",null),e([r()],a.prototype,"waitDuration",void 0),e([r()],a.prototype,"wait",void 0),e([d("wait",["attributes"])],a.prototype,"readWait",null),a=X=e([f("esri.rest.support.Stop")],a);const Ct=a,Dt=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],L={graphic:null,property:null,oldValue:null,newValue:null};function tt(t){return t instanceof vt||t instanceof gt||t instanceof ft||t instanceof St||t instanceof wt||t instanceof It||t instanceof Ct}function Nt(t){return x.isCollection(t)&&t.length&&tt(t.at(0))}function jt(t){return Array.isArray(t)&&t.length>0&&tt(t[0])}const At=new Set(["default"]);let O=class extends mt(yt){constructor(){super(...arguments),this._graphics=new x,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map,this._interaction=null,this._loadInteractionPromise=null,this.interactive=!1}get _routeItems(){return new ut({getCollections:()=>this.layer==null||this.destroyed?[]:[this.layer.routeInfo!=null?new x([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this.addHandles(W(()=>{const{interactive:t,suspended:i}=this;return{interactive:t,suspended:i}},({interactive:t,suspended:i})=>{const s=t&&!i;s&&this._getInteractionLoadPromise().then(o=>{o.enabled=this.interactive&&!this.suspended}),this._interaction&&(this._interaction.enabled=s)},pt)),this._updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),dt)}destroy(){var t;this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){var t;this._destroyGraphicsView(),(t=this._interaction)!=null&&t.enabled&&(this._interaction.enabled=!1)}get selectedNetworkFeatures(){var t;return((t=this._interaction)==null?void 0:t.selectedNetworkFeatures)??null}async create(t){if(this.interactive)return(await this._getInteractionLoadPromise()).create(t)}async fetchPopupFeaturesAtLocation(t,i){return this._graphicsView.hitTest(t).filter(({popupTemplate:s})=>!!s)}highlight(t){let i;i=tt(t)?[this._getNetworkFeatureUid(t)]:jt(t)?t.map(o=>this._getNetworkFeatureUid(o)):Nt(t)?t.map(o=>this._getNetworkFeatureUid(o)).toArray():[t.uid];const s=i.filter(k);return s.length?(this._addHighlight(s),it(()=>this._removeHighlight(s))):it()}async hitTest(t,i){if(this.suspended)return null;const s=this._graphicsView.hitTest(t).filter(k).map(u=>this._networkGraphicMap.get(u));if(!s.length)return null;const{layer:o}=this;return s.reverse().map(u=>({type:"route",layer:o,mapPoint:t,networkFeature:u}))}isUpdating(){return this._graphicsView.updating}moveEnd(){}remove(t){var i;(i=this._interaction)==null||i.remove(t)}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const s=this._highlightIds.get(i);this._highlightIds.set(i,s+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),s=new ht(t.featuresTilingScheme);this._graphicsView=new bt({container:s,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(s),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return Dt.indexOf(i.type)}_getInteractionLoadPromise(){return this._loadInteractionPromise||(this._loadInteractionPromise=this._loadInteraction(),this._updatingHandles.addPromise(this._loadInteractionPromise)),this._loadInteractionPromise}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}async _loadInteraction(){const{layer:t,view:i}=this,{RouteLayerInteraction:s}=await ct(async()=>{const{RouteLayerInteraction:o}=await import("./RouteLayerInteraction-Bs39bHu1.js").then(u=>u.R);return{RouteLayerInteraction:o}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12]));return this._interaction=new s({view:i,layer:t}),this._interaction}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const s=this._highlightIds.get(i)-1;s===0?this._highlightIds.delete(i):this._highlightIds.set(i,s)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(i=>{const s=this._networkFeatureMap.get(i);return this._networkFeatureMap.delete(i),this._networkGraphicMap.delete(s),s}));for(const i of t.removed)this.removeHandles(i)}if(t.added.length){this._graphics.addMany(t.added.map(i=>{const s=this._createGraphic(i);return s.symbol==null?null:(this._networkFeatureMap.set(i,s),this._networkGraphicMap.set(s,i),s)}).filter(k));for(const i of t.added)this.addHandles([W(()=>i.geometry,(s,o)=>{this._updateGraphic(i,"geometry",s,o)}),W(()=>i.symbol,(s,o)=>{this._updateGraphic(i,"symbol",s,o)}),W(()=>i.popupTemplate,s=>{this._networkFeatureMap.has(i)&&(this._networkFeatureMap.get(i).popupTemplate=s)})],i);this._graphics.sort((i,s)=>this._getDrawOrder(i)-this._getDrawOrder(s))}}_updateGraphic(t,i,s,o){if(!this._networkFeatureMap.has(t)){const w=this._createGraphic(t);return this._networkFeatureMap.set(t,w),this._networkGraphicMap.set(w,t),void this._graphics.add(w)}const u=this._networkFeatureMap.get(t);u[i]=s,L.graphic=u,L.property=i,L.oldValue=o,L.newValue=s,this._graphicsView.graphicUpdateHandler(L)}_updateHighlight(){const t=Array.from(this._highlightIds.keys()),i=this._getHighlightBits(At.values());this._graphicsView.setHighlight(t.map(s=>({objectId:s,highlightFlags:i})))}};e([r()],O.prototype,"_graphics",void 0),e([r()],O.prototype,"_routeItems",null),e([r()],O.prototype,"_interaction",void 0),e([r()],O.prototype,"interactive",void 0),e([r({readOnly:!0})],O.prototype,"selectedNetworkFeatures",null),O=e([f("esri.views.2d.layers.RouteLayerView2D")],O);const _t=O,Wt=Object.freeze(Object.defineProperty({__proto__:null,default:_t},Symbol.toStringTag,{value:"Module"}));export{Wt as R,It as S,St as T,ft as a,Tt as b,vt as c,Ot as d,wt as j,$ as n,Jt as o,Ct as w,gt as y};
