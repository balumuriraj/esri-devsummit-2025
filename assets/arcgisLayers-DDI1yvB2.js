const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/OperatorGeodeticLength-D3yxlBzD.js","assets/index-BdTzoSyX.js","assets/index-4rsQkLC1.css","assets/MapImageLayer-CHdASjC1.js","assets/QueryTask-BY8PYNl6.js","assets/query-DTCy_sKP.js","assets/pbfQueryUtils-Cw1Em5WI.js","assets/pbf-B4ErtKXZ.js","assets/memoryEstimations-yxcmaqK-.js","assets/OptimizedGeometry-DUXeneY0.js","assets/OptimizedFeatureSet-CxP_3D9q.js","assets/executeQueryJSON-BS_Mz775.js","assets/featureConversionUtils-XqvjyuvE.js","assets/SceneLayerWorker-DZSQRrH9.js","assets/MeshLocalVertexSpace-CZc8Xjwc.js","assets/vec3-rxgYcXg5.js","assets/projectVectorToVector-CoNH-8LJ.js","assets/projectPointToVector-Dls3xE4T.js","assets/sphere-B55dYDXm.js","assets/mat3f64-q3fE-ZOt.js","assets/plane-DHJlmW9S.js","assets/mat4f64-Dk4dwAN8.js","assets/quatf64-aQ5IuZRd.js","assets/I3SBinaryReader-Cq-8UfYu.js","assets/VertexAttribute-Cq4MnHjR.js","assets/edgeUtils-DWr_JZCz.js","assets/floatRGBA-CRwdEw7G.js","assets/NormalAttribute.glsl-CqEUtZ7y.js","assets/glsl-BH37Aalp.js","assets/ShaderOutput-DnYY5J1_.js","assets/BindType-BBwFZqyN.js","assets/orientedBoundingBox-BjAymS4p.js","assets/quat-Dom6TVY_.js","assets/spatialReferenceEllipsoidUtils-CgkZzaUj.js","assets/computeTranslationToOriginAndRotation-CkrVPguw.js","assets/popupUtils-DvQxtH2k.js","assets/associatedFeatureServiceUtils-CoQHrjiX.js","assets/SketchOptions-CKVMGdcO.js","assets/geodesicUtils-Dz6jG4dz.js","assets/utils-DJ1i1Qab.js","assets/quantizationUtils-6FyEi_tz.js","assets/FeatureLayerSource-uapCPLzm.js","assets/meshVertexSpaceUtils-MbpvQ4dC.js","assets/External-BfeX_35b.js","assets/MeshTransform-PLs3wxGa.js","assets/axisAngleDegrees-mfWA-kSc.js","assets/editingSupport-DGgaUnlR.js","assets/clientSideDefaults-DHOaSwC0.js","assets/QueryEngineCapabilities-B_pTbIiR.js","assets/layersCreator-CJlwxMg6.js","assets/loadUtils-BzUT0l6f.js","assets/fetchService-DWuGqzM5.js","assets/lazyLayerLoader-BITN9tTr.js","assets/portalLayers-CP2YMZuK.js","assets/saveUtils-CIpoQliA.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/ImageryTileLayerView2D-CSuHeCGw.js","assets/RasterVFDisplayObject-CZbkUFjc.js","assets/VertexArrayObject-BH4ZShR1.js","assets/VertexElementDescriptor-BLyltQyJ.js","assets/dataUtils-C_AUXFJ-.js","assets/WGLContainer-DCAN0504.js","assets/dataViewUtils-D7BYJB-l.js","assets/BoundingBox-6hL32D3p.js","assets/ProgramTemplate-BQLYVZsh.js","assets/vec3f32-nZdmKIgz.js","assets/Container-DQXD8zjD.js","assets/config-t1u2RPtY.js","assets/earcut-D9gy186-.js","assets/LayerView-vwH2wZOT.js","assets/rasterUtils-DJA04KKO.js","assets/VertexStream-rw799wV8.js","assets/utils-p_uf9qDu.js","assets/FramebufferObject-BK8N5lb-.js","assets/TileContainer-D4zOqkhR.js","assets/rasterProjectionHelper-Bt6qacZJ.js","assets/timeSupport-DJ6-xdPr.js","assets/RefreshableLayerView-AyYBLLLh.js","assets/RasterWorker-LEX990EB.js","assets/_commonjsHelpers-DCkdB7M8.js","assets/ElevationLayer-DPtaWVJ6.js","assets/WorkerHandle-B6monv5U.js","assets/editingTools-DYMAQWRy.js","assets/interfaces-D1wMLz3p.js","assets/VerticalOffset.glsl-Do7sLNAa.js","assets/Indices-S4f2KV2z.js","assets/InterleavedLayout-BvgMmFLI.js","assets/BufferView-CSryOQvR.js","assets/triangle-Ca__qMMn.js","assets/lineSegment-C63vgSYT.js","assets/renderState-u5p2QFdT.js","assets/boundedPlane-DfxhtRJn.js","assets/requestImageUtils-Bl5Lbjug.js","assets/TextureFormat-1mYWTFa-.js","assets/ShaderBuilder-CnIoMUpN.js","assets/triangulationUtils-Do_GUbm0.js","assets/deduplicate-YFCzGLHs.js","assets/RibbonLine.glsl-DO92ENQp.js","assets/HUDVisibility.glsl-C3fiEU_9.js","assets/doublePrecisionUtils-B0owpBza.js","assets/hydratedFeatures-DAj45_sS.js","assets/Octree-DsVO5QJf.js","assets/HUDMaterial.glsl-70db8n-i.js","assets/NestedMap-GuqgquCN.js","assets/RouteLayerInteraction-BIXOdr2B.js","assets/GraphicsLayer-DC5Hy3Bb.js","assets/RouteLayerView2D-B7pXZsBc.js","assets/GraphicContainer-KZjQC03b.js","assets/AGraphicContainer-CPWMftxI.js","assets/TechniqueInstance-CZ-lgMme.js","assets/UpdateTracking2D-mUe-prLO.js","assets/FeatureCommandQueue-CwACke_k.js","assets/CIMSymbolHelper-C_OOYmQh.js","assets/BidiEngine-QXap_35O.js","assets/fontUtils-DgOdrfM2.js","assets/Rect-Dkdvd_ov.js","assets/rasterizingUtils-Dvw_VRMk.js","assets/TechniqueType-uMFRS8dR.js","assets/GraphShaderModule-Amx3nJDj.js","assets/QueueProcessor-f1haG1Sz.js","assets/GraphicsView2D-DOSdlu2c.js","assets/OverrideHelper-D9SPx1Lm.js","assets/FeatureMetadata-BxBLpuNq.js","assets/queryUtils-DfIvwoZF.js","assets/json-Wa8cmqdu.js","assets/timeSupport-BcX1tAH4.js","assets/TimeOnly-JrFYyWLq.js","assets/dehydratedFeatures-WjlQ19Kf.js","assets/automaticLengthMeasurementUtils-HPnqEU_u.js","assets/memoize-DmxaQ-k8.js","assets/geodesicLengthMeasurementUtils-iVRcDTyA.js","assets/geometryEngineBase-B0ZyeKAX.js","assets/hydrated-Bmn8dDoA.js","assets/glUtil-BpQCKi7W.js","assets/automaticAreaMeasurementUtils-CMpQirsd.js","assets/PointSnappingHint-wC-zCGSN.js","assets/editPlaneUtils-DplA7xyq.js","assets/ReactiveSet-BWWkfb3K.js","assets/SelectedVertexTooltipInfo-YwXVk6Gb.js","assets/TranslateTooltipInfo-DyB7SV6x.js","assets/ExtentScaleTooltipInfo-DOVm6Nfi.js","assets/GraphicManipulator-iJVi4sO-.js","assets/drapedUtils-BxvBHqvh.js","assets/KMLLayerView2D-K86dLvHI.js","assets/BitmapTechnique-BE1d4tFl.js","assets/BitmapContainer-BI1FgNfR.js","assets/MaterialPrograms-D5NInDJS.js","assets/webglDeps-CHHEULMX.js","assets/testSVGPremultipliedAlpha-Cxf33MbL.js","assets/FeatureLayerView2D-CSpUOmRW.js","assets/AttributeBinsFeatureSet-BCFOQXfl.js","assets/AttributeBinsQuery-FpBcv0UY.js","assets/FixedIntervalBinParameters-Dkr3Au9S.js","assets/CircularArray-CujHzHWW.js","assets/SDFHelper-aoTw5THR.js","assets/parquet-BM8wJJsw.js","assets/knowledgegraph-Df1xNS_e.js","assets/arcade-CBXoZ1_E.js","assets/unitConversion-CwFVEmQE.js","assets/ImmutableArray-BPVd6ESQ.js","assets/shared-BFeLzSXM.js","assets/number-DZuUqiTo.js","assets/WhereClause-CsqVDoUQ.js","assets/portalUtils-CNsT-y1P.js","assets/executeQueryForSnapping-oYJgckhP.js","assets/PooledRBush-CmqztgZz.js","assets/optimizedFeatureQueryEngineAdapter-fvnFawcm.js","assets/QueryEngine-BDaupG1V.js","assets/WhereClauseCache-BE_9y_nR.js","assets/SnappingCandidate-DGkpYqI6.js","assets/MemorySourceWorker-DUuyr6Xl.js","assets/sourceUtils-d6IgwRB1.js","assets/date-Ctp1FiBW.js","assets/MediaLayerView2D-CJz_ffBn.js","assets/enums-BRzLM11V.js","assets/GridShader-BnpO35uT.js","assets/PieChartMeshWriter-GQj5SWh7.js","assets/libtess-DGxeM0vd.js","assets/utils-y65c3gnY.js","assets/grouping-J3Lh5DN4.js","assets/OverlayContainer-I_njHRfm.js","assets/utils-ehcGqGxa.js","assets/FeaturePipelineWorker-1G2Fc4Gy.js","assets/MeshWriterRegistry-DOBFMG54.js","assets/operatorGeodeticDensify-BMkhEDvi.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/geodeticCurveType-CirnHLSB.js","assets/geojson-BYG4eI-c.js","assets/PointCloudWorker-6eg_vNXB.js","assets/uploadAssets-T_pFqwHB.js","assets/meshFeatureAttributes-6ZTnpIxu.js","assets/SourceLayerData-BmOdsy--.js","assets/VideoLayerView2D-B2e0Mudn.js","assets/webdocSaveUtils-BKIo0j41.js","assets/basemapUtils-CMmsNt_c.js","assets/resourceUtils-Ciuy2Wq4.js","assets/WFSSourceWorker-CTexPelQ.js","assets/WMSLayerView2D-4jj5ugad.js","assets/ExportStrategy-WnBucwZ1.js","assets/ProjectionTransformation-BKvJQgia.js","assets/jsonConverter-EM0Ttrbp.js","assets/operators-DztraDEy.js","assets/apiConverter-CapvnbKP.js","assets/operatorGeodesicBuffer-AiSbAtGl.js","assets/operatorBuffer-C-V_neyJ.js","assets/GeometryCleaner-BEJM7I4l-0ankUTf1.js","assets/operatorConvexHull-Ck1DXmbX.js","assets/OperatorCrosses-C6tkU4yA.js","assets/operatorIntersection-DrFaEnNF.js","assets/OperatorIntersects-Cyf_X-9B.js","assets/operatorOffset-DR-IdO2K.js","assets/OperatorOverlaps-kNyk0dTL.js","assets/operatorSimplify-BkqH1ebP.js","assets/OperatorTouches-DhF3yOQ5.js","assets/operatorUnion-FPI5b0Uj.js","assets/OperatorWithin-LmFy0UJa.js","assets/MeshComponent-B2-M1acy.js","assets/meshProperties-C4iW0Ukm.js","assets/MeshVertexAttributes-BLZ2WxAC.js","assets/vec4-ueQh84B4.js","assets/loader-Bttkx4gJ.js","assets/objectResourceUtils-D3WY8JDL.js","assets/RealisticTree.glsl-eylmpLec.js","assets/vertexSpaceConversion-DBS45AQ3.js","assets/featureLayerUtils-Czbtdp2r.js"])))=>i.map(i=>d[i]);
import{bZ as C,bm as _,a7 as S,ei as F,ej as $,ek as N,b_ as P}from"./index-BdTzoSyX.js";import{s as V}from"./associatedFeatureServiceUtils-CoQHrjiX.js";import{t as f,i as b,a as k}from"./fetchService-DWuGqzM5.js";import{a as J}from"./lazyLayerLoader-BITN9tTr.js";const x={FeatureLayer:!0,SceneLayer:!0};async function Z(a){const{properties:s,url:e}=a,t={...s,url:e},l=await M(e,s==null?void 0:s.customParameters),{Constructor:r,layerId:o,sourceJSON:u,parsedUrl:c,layers:y,tables:d}=l;if(y.length+d.length===0)return o!=null&&(t.layerId=o),u!=null&&(t.sourceJSON=u),new r(t);const p=new(await C(async()=>{const{default:w}=await import("./OperatorGeodeticLength-D3yxlBzD.js").then(v=>v.d);return{default:w}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224]))).default({title:c.title});return await E(p,l,t),p}function O(a,s){return a?a.find(({id:e})=>e===s):null}function T(a,s,e,t,l){const r={...l,layerId:s};return a!=null&&(r.url=a),e!=null&&(r.sourceJSON=e),"sublayerTitleMode"in t.prototype&&(r.sublayerTitleMode="service-name"),new t(r)}async function E(a,s,e){const t=s.sublayerConstructorProvider;for(const{id:l,serverUrl:r}of s.layers){const o=O(s.sublayerInfos,l),u=T(r,l,o,(o&&(t==null?void 0:t(o)))??s.Constructor,e);a.add(u)}if(s.tables.length){const l=await h("FeatureLayer");s.tables.forEach(({id:r,serverUrl:o})=>{const u=T(o,r,O(s.tableInfos,r),l,e);a.tables.add(u)})}}async function M(a,s){var d,p,w,v,I,g,L;let e=_(a);if(e==null&&(e=await D(a,s)),e==null)throw new S("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:a});const{serverType:t,sublayer:l}=e;let r;const o={FeatureServer:"FeatureLayer",KnowledgeGraphServer:"KnowledgeGraphLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer",VideoServer:"VideoLayer"},u=t==="FeatureServer",c=t==="SceneServer",y={parsedUrl:e,Constructor:null,layerId:u||c?l??void 0:void 0,layers:[],tables:[]};switch(t){case"MapServer":if(l!=null){const{type:n}=await f(a,{customParameters:s});switch(r="FeatureLayer",n){case"Catalog Layer":r="CatalogLayer";break;case"Catalog Dynamic Group Layer":throw new S("arcgis-layers:unsupported",`fromUrl() not supported for "${n}" layers`)}}else r=await A(a,s)?"TileLayer":"MapImageLayer";break;case"ImageServer":{const n=await f(a,{customParameters:s}),{tileInfo:i,cacheType:m}=n;r=i?((d=i==null?void 0:i.format)==null?void 0:d.toUpperCase())!=="LERC"||m&&m.toLowerCase()!=="elevation"?"ImageryTileLayer":"ElevationLayer":"ImageryLayer";break}case"SceneServer":{const n=await f(e.url.path,{customParameters:s});if(r="SceneLayer",n){const i=n==null?void 0:n.layers;if((n==null?void 0:n.layerType)==="Voxel")r="VoxelLayer";else if(i!=null&&i.length){const m=(p=i[0])==null?void 0:p.layerType;m!=null&&P[m]!=null&&(r=P[m])}}break}case"3DTilesServer":throw new S("arcgis-layers:unsupported","fromUrl() not supported for 3DTiles layers");case"FeatureServer":if(r="FeatureLayer",l!=null){const n=await f(a,{customParameters:s});y.sourceJSON=n,r=b(n.type)}break;default:r=o[t]}if(x[r]&&l==null){const n=await G(a,t,s);if(u&&(y.sublayerInfos=n.layerInfos,y.tableInfos=n.tableInfos),n.layers.length+n.tables.length!==1)y.layers=n.layers,y.tables=n.tables,u&&((w=n.layerInfos)!=null&&w.length)&&(y.sublayerConstructorProvider=await K(n.layerInfos));else if(u||c){const i=((v=n.layerInfos)==null?void 0:v[0])??((I=n.tableInfos)==null?void 0:I[0]);if(y.layerId=((g=n.layers[0])==null?void 0:g.id)??((L=n.tables[0])==null?void 0:L.id),y.sourceJSON=i,u){const m=i==null?void 0:i.type;r=b(m)}}}return y.Constructor=await h(r),y}async function D(a,s){var u;const e=await f(a,{customParameters:s});let t=null,l=null;const r=e.type;if(r==="Feature Layer"||r==="Table"?(t="FeatureServer",l=e.id??null):r==="indexedVector"?t="VectorTileServer":e.hasOwnProperty("mapName")?t="MapServer":e.hasOwnProperty("bandCount")&&e.hasOwnProperty("pixelSizeX")?t="ImageServer":e.hasOwnProperty("maxRecordCount")&&e.hasOwnProperty("allowGeometryUpdates")?t="FeatureServer":e.hasOwnProperty("streamUrls")?t="StreamServer":U(e)?(t="SceneServer",l=e.id):e.hasOwnProperty("layers")&&U((u=e.layers)==null?void 0:u[0])&&(t="SceneServer"),!t)return null;const o=l!=null?F(a):null;return{title:o!=null&&e.name||N(a),serverType:t,sublayer:l,url:{path:o!=null?o.serviceUrl:$(a).path}}}function U(a){return a!=null&&a.hasOwnProperty("store")&&a.hasOwnProperty("id")&&typeof a.id=="number"}async function G(a,s,e){let t,l,r=!1;switch(s){case"FeatureServer":{const c=await k(a,{customParameters:e});r=!!c.layersJSON,t=c.layersJSON||c.serviceJSON;break}case"SceneServer":{const c=await R(a,e);t=c.serviceInfo,l=c.tableServerUrl;break}default:t=await f(a,{customParameters:e})}const o=t==null?void 0:t.layers,u=t==null?void 0:t.tables;return{layers:(o==null?void 0:o.map(c=>({id:c.id})).reverse())||[],tables:(u==null?void 0:u.map(c=>({serverUrl:l,id:c.id})).reverse())||[],layerInfos:r?o:[],tableInfos:r?u:[]}}async function R(a,s){var l;const e=await f(a,{customParameters:s});if(!((l=e.layers)==null?void 0:l[0]))return{serviceInfo:e};try{const{serverUrl:r}=await V(a),o=await f(r,{customParameters:s}).catch(()=>null);return o&&(e.tables=o.tables),{serviceInfo:e,tableServerUrl:r}}catch{return{serviceInfo:e}}}async function h(a){return(0,J[a])()}async function A(a,s){return(await f(a,{customParameters:s})).tileInfo}async function K(a){if(!a.length)return;const s=new Set,e=[];for(const{type:r}of a)s.has(r)||(s.add(r),e.push(h(b(r))));const t=await Promise.all(e),l=new Map;return Array.from(s).forEach((r,o)=>{l.set(r,t[o])}),r=>l.get(r.type)}export{Z as fromUrl};
