import{e2 as m,e3 as c,bF as g,bD as n,c5 as l,aa as h,dT as d,aL as o,aM as w,aN as u}from"./index-BuurUjNy.js";import{S as y,y as V}from"./LayerView-CQVnlvN8.js";import{t as v}from"./GraphicContainer-C5vOLOnx.js";import{A as f}from"./GraphicsView2D-ByVIaOBj.js";import"./Container-DSpu0Eal.js";import"./AGraphicContainer-BDJOr37h.js";import"./TechniqueInstance-kKLNFxbl.js";import"./UpdateTracking2D-C6bLgmat.js";import"./dataViewUtils-TvsUr7hm.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-j-OHa0PB.js";import"./FramebufferObject-B1BskXlu.js";import"./VertexArrayObject-D8BUTeor.js";import"./memoryEstimations-CMT4SzJ5.js";import"./TileContainer-5EG0iL3t.js";import"./WGLContainer-LmHVZ1Cq.js";import"./ProgramTemplate-CamO9WjC.js";import"./vec3f32-nZdmKIgz.js";import"./config-CIMzMD-H.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-CBlorucq.js";import"./OptimizedFeatureSet-DWrxeG6N.js";import"./OptimizedGeometry-ctYdNoIG.js";import"./FeatureCommandQueue-CQ9Aznlk.js";import"./CIMSymbolHelper-C_-iIFr_.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-DmUOgodR.js";import"./Rect-BgwV4lPu.js";import"./rasterizingUtils-DZu30vQ7.js";import"./floatRGBA-CkSho6R2.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-BBarpPRO.js";import"./ShaderBuilder-BhBi3jJv.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-BinXpWME.js";import"./OverrideHelper-CGqrUmI_.js";import"./quantizationUtils-BdN41_Xc.js";import"./FeatureMetadata-DHjLLq4R.js";import"./queryUtils-DnEZcHAW.js";import"./json-Wa8cmqdu.js";import"./timeSupport-wEUOQSqn.js";import"./TimeOnly-3THQQ8Fr.js";import"./mat3f64-q3fE-ZOt.js";import"./dehydratedFeatures-sbejWfdQ.js";let p=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m(()=>{var i;return(i=this.layer)==null?void 0:i.visible},()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):n.isCollection(i)&&i.length>0&&(r=i.map(s=>s&&s.uid).toArray());const e=r==null?void 0:r.filter(l);if(!(e!=null&&e.length))return h();const a=(t==null?void 0:t.name)??d;return this._addHighlights(e,a),h(()=>!this.destroyed&&this._removeHighlights(e,a))}_processHighlight(){var t;const i=this._getHighlights();(t=this.graphicsView)==null||t.setHighlight(i)}};o([w()],p.prototype,"graphicsView",void 0),p=o([u("esri.views.2d.layers.GraphicsLayerView2D")],p);const gi=p;export{gi as default};
