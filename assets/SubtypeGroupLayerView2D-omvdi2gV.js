import{dZ as s,d_ as n,bx as d,aL as u,aN as l}from"./index-szNj1aqA.js";import{d as g}from"./FeatureLayerView2D-ClcyjlqT.js";import"./featureConversionUtils-3a9TqYps.js";import"./OptimizedFeatureSet-FFBqtxva.js";import"./memoryEstimations-CnkpdY1b.js";import"./OptimizedGeometry-BLyz1xrK.js";import"./timeSupport-BXHuLygE.js";import"./AttributeBinsFeatureSet-B5nhZAlQ.js";import"./AttributeBinsQuery-ZKkz_umI.js";import"./queryUtils-Cg1JM0hf.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-C-wHLABX.js";import"./LayerView-DzzgUDD7.js";import"./Container-huN4r_Ys.js";import"./TechniqueInstance-BwsTBjP9.js";import"./UpdateTracking2D-C6ER-1No.js";import"./dataViewUtils-CgUbP-hL.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-BjvutGDs.js";import"./FramebufferObject-HInsG0L_.js";import"./VertexArrayObject-ByzQLaW8.js";import"./TileContainer-DmLUgm6h.js";import"./WGLContainer-B-8KBCgQ.js";import"./ProgramTemplate-NjU0Lze9.js";import"./vec3f32-nZdmKIgz.js";import"./config-DX6_QZcn.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-C6DlcTjW.js";import"./CIMSymbolHelper-CSFIZESX.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-DImQRU8p.js";import"./Rect-DOTjBfO0.js";import"./rasterizingUtils-CMJTqQ9h.js";import"./floatRGBA-eKHE6e6y.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-T2C1qz5m.js";import"./ShaderBuilder-vfhyfMfS.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-BDnCkJHv.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-DwFHPk5m.js";import"./parquet-Crzj5eax.js";import"./popupUtils-BSdPYMAw.js";import"./RefreshableLayerView-CVNfH2Mh.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const pi=i;export{pi as default};
