import{b2 as p,c as u,e6 as d,n as y,aE as m,i as t,k as o,al as r,a1 as a,e7 as c,e8 as h,e9 as v,ea as w,df as b,o as f,eb as g}from"./CodeBlock-DBIw63CI.js";import{g as n}from"./queryUtils-B4LAuMaE.js";import{c as j,m as S,u as R,a as T,b as $}from"./FixedIntervalBinParameters-KycFlU6D.js";import"./index-BYYG-xAB.js";import"./json-Wa8cmqdu.js";const B=new m({asc:"ascending",desc:"descending"}),x={base:$,key:"type",typeMap:{"auto-interval":T,date:R,"fixed-boundaries":S,"fixed-interval":j}};let e=class extends p.ClonableMixin(u){constructor(i){super(i),this.binParameters=null,this.binOrder="ascending",this.cacheHint=void 0,this.datumTransformation=null,this.defaultSpatialReference=null,this.distance=void 0,this.geometry=null,this.lowerBoundaryAlias=null,this.outSpatialReference=null,this.outStatistics=null,this.returnDistinctValues=null,this.spatialRelationship="intersects",this.timeExtent=null,this.upperBoundaryAlias=null,this.units=null,this.where="1=1"}set outTimeZone(i){this._set("outTimeZone",i),i&&!d(i)&&y.getLogger(this).warn("#outTimeZone",`the parsed value '${i}' may not be a valid IANA time zone`)}};t([o({types:x,json:{name:"bin",write:!0}})],e.prototype,"binParameters",void 0),t([r(B)],e.prototype,"binOrder",void 0),t([o({type:Boolean,json:{write:!0}})],e.prototype,"cacheHint",void 0),t([o({json:{write:!0}})],e.prototype,"datumTransformation",void 0),t([o({type:a,json:{name:"defaultSR",write:!0}})],e.prototype,"defaultSpatialReference",void 0),t([o({type:Number,json:{write:{overridePolicy:i=>({enabled:i>0})}}})],e.prototype,"distance",void 0),t([o({types:h,json:{read:c,write:!0}})],e.prototype,"geometry",void 0),t([o({type:String,json:{write:!0}})],e.prototype,"lowerBoundaryAlias",void 0),t([o({type:a,json:{name:"outSR",write:!0}})],e.prototype,"outSpatialReference",void 0),t([o({type:[v],json:{write:{enabled:!0,overridePolicy(){return{enabled:this.outStatistics!=null&&this.outStatistics.length>0}}}}})],e.prototype,"outStatistics",void 0),t([o({value:null,json:{name:"outTimeReference",read:{reader:i=>i.ianaTimeZone},write:{writer:(i,s,l)=>{i&&(s[l]={ianaTimeZone:i})}}}})],e.prototype,"outTimeZone",null),t([o({type:Boolean,json:{write:!0}})],e.prototype,"returnDistinctValues",void 0),t([r(w,{name:"spatialRel"})],e.prototype,"spatialRelationship",void 0),t([o({type:b,json:{write:!0}})],e.prototype,"timeExtent",void 0),t([o({type:String,json:{write:!0}})],e.prototype,"upperBoundaryAlias",void 0),t([o({type:String,json:{read:n.read,write:{writer:n.write,overridePolicy(i){return{enabled:i!=null&&this.distance!=null}}}}})],e.prototype,"units",void 0),t([o({type:String,json:{write:!0}})],e.prototype,"where",void 0),e=t([f("esri.rest.support.AttributeBinsQuery")],e);const D=e;e.from=g(e);export{D as default};
