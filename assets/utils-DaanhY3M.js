import{cN as U,cO as z,a1 as C,cP as R,bN as A,v as G,cQ as S,cR as v,cS as Y,ae as E,cT as D}from"./CodeBlock-DBIw63CI.js";import{j as P}from"./quantizationUtils-yHnQ7Pvp.js";import{$ as V}from"./utils-Cxh3ySg9.js";import{m as j,B as L}from"./utils-DduwN48O.js";let f=null;const _=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function k(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function X(e,t,n,i){const r=R(n)?A(n):null,s=r?Math.round((r.valid[1]-r.valid[0])/t.scale[0]):null;return e.map(l=>{const a=new G(l.geometry);return P(t,a,a),l.geometry=r?k(a,s??0,i[0]):a,l})}function ee(e,t=18,n,i,r){const s=new Float64Array(i*r);t=Math.round(D(t));let l=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY;const I=S(n);for(const{geometry:p,attributes:b}of e){const{x:g,y:c}=p,$=Math.max(0,g-t),F=Math.max(0,c-t),M=Math.min(r,c+t),w=Math.min(i,g+t),h=+I(b);for(let m=F;m<M;m++)for(let d=$;d<w;d++){const x=m*i+d,N=Y(d-g,m-c,t)*h,u=s[x]+=N;l=Math.min(l,u),a=Math.max(a,u)}}return{min:l,max:a}}function q(e){const t=_.exec(e);if(!t)return null;const{hh:n,mm:i,ss:r,ms:s}=t.groups;return Number(n)*v.hours+Number(i)*v.minutes+Number(r)*v.seconds+Number(s||0)}async function te(e,t,n=!0){if(!t)return[];const{field:i,field2:r,field3:s,fieldDelimiter:l,fieldInfos:a,timeZone:I}=e,p=i&&(a==null?void 0:a.find(u=>u.name.toLowerCase()===i.toLowerCase())),b=!!p&&U(p),g=!!p&&V(p),c=e.valueExpression,$=e.normalizationType,F=e.normalizationField,M=e.normalizationTotal,w=[],h=e.viewInfoParams;let m=null,d=null;if(c){if(!f){const{arcadeUtils:u}=await z();f=u}f.hasGeometryOperations(c)&&await f.enableGeometryOperations(),m=f.createFunction(c),d=h?f.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new C(h.spatialReference)}):null}const x=e.fieldInfos,N=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&x?{fields:x}:null;return t.forEach(u=>{const y=u.attributes;let o;if(c){const T=N?{...u,layer:N}:u,O=f.createExecContext(T,d,I);o=f.executeFunction(m,O)}else y&&(o=y[i],r?(o=`${j(o)}${l}${j(y[r])}`,s&&(o=`${o}${l}${j(y[s])}`)):typeof o=="string"&&n&&(g?o=o?new Date(o).getTime():null:b&&(o=o?q(o):null)));if($&&typeof o=="number"&&isFinite(o)){const T=y&&parseFloat(y[F]);o=L(o,$,T,M)}w.push(o)}),w}function ne(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let r;return n==="field"?r="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(r=`(${t} > 0)`),r}function ie(e,t,n){const i=t!=null?e+" >= "+t:"",r=n!=null?e+" <= "+n:"";let s="";return s=i&&r?B(i,r):i||r,s?"("+s+")":""}function B(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function re(e,t){if(e&&e.spatialRelationship!=="intersects")return new E(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function oe(e,t,n){const i=Q({layer:e,fields:t});if(i.length)return new E(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const r=Z({layer:e,fields:t});return r.length?new E(n,"Unsupported fields: "+r.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function Q(e){const t=e.layer;return e.fields.filter(n=>!t.getField(n))}function Z(e){const t=e.layer;return e.fields.filter(n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics})}export{ne as F,q as I,re as M,ie as N,oe as T,B as U,te as b,ee as w,X as x};
