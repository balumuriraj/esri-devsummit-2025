import{dZ as s,d_ as n,bx as d,aL as u,aN as l}from"./index-BdTzoSyX.js";import{d as g}from"./FeatureLayerView2D-CSpUOmRW.js";import"./featureConversionUtils-XqvjyuvE.js";import"./OptimizedFeatureSet-CxP_3D9q.js";import"./memoryEstimations-yxcmaqK-.js";import"./OptimizedGeometry-DUXeneY0.js";import"./timeSupport-DJ6-xdPr.js";import"./AttributeBinsFeatureSet-BCFOQXfl.js";import"./AttributeBinsQuery-FpBcv0UY.js";import"./queryUtils-DfIvwoZF.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-Dkr3Au9S.js";import"./LayerView-vwH2wZOT.js";import"./Container-DQXD8zjD.js";import"./TechniqueInstance-CZ-lgMme.js";import"./UpdateTracking2D-mUe-prLO.js";import"./dataViewUtils-D7BYJB-l.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-6hL32D3p.js";import"./FramebufferObject-BK8N5lb-.js";import"./VertexArrayObject-BH4ZShR1.js";import"./TileContainer-D4zOqkhR.js";import"./WGLContainer-DCAN0504.js";import"./ProgramTemplate-BQLYVZsh.js";import"./vec3f32-nZdmKIgz.js";import"./config-t1u2RPtY.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-CwACke_k.js";import"./CIMSymbolHelper-C_OOYmQh.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-DgOdrfM2.js";import"./Rect-Dkdvd_ov.js";import"./rasterizingUtils-Dvw_VRMk.js";import"./floatRGBA-CRwdEw7G.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-Amx3nJDj.js";import"./ShaderBuilder-CnIoMUpN.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-f1haG1Sz.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-aoTw5THR.js";import"./parquet-BM8wJJsw.js";import"./popupUtils-DvQxtH2k.js";import"./RefreshableLayerView-AyYBLLLh.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const pi=i;export{pi as default};
