const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/disjointOperator-CP7-21_d.js","assets/ProjectionTransformation-DGeKO2u0.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/index-BuurUjNy.js","assets/index-4rsQkLC1.css","assets/jsonConverter-yfbp7gLf.js","assets/intersectsOperator-C5r9_YB6.js","assets/OperatorIntersects-Crjb7iIf.js","assets/touchesOperator-B09VL_hP.js","assets/OperatorTouches-CLHved8h.js","assets/crossesOperator-D0h37Q3-.js","assets/OperatorCrosses-ct4nq5YK.js","assets/withinOperator-BNWPxGPP.js","assets/OperatorWithin-_HdhtDkm.js","assets/containsOperator-SbYvvEgY.js","assets/overlapsOperator-Dlr3TvpM.js","assets/OperatorOverlaps-Bdo6jeEJ.js","assets/OperatorGeodeticLength-CUYQSLQb.js","assets/MapImageLayer-2rm6uE78.js","assets/QueryTask-CijJFltl.js","assets/query-CvrxY7Xg.js","assets/pbfQueryUtils-CoWpC1gm.js","assets/pbf-y3_vskRC.js","assets/memoryEstimations-CMT4SzJ5.js","assets/OptimizedGeometry-ctYdNoIG.js","assets/OptimizedFeatureSet-DWrxeG6N.js","assets/executeQueryJSON-DO4_mY1J.js","assets/featureConversionUtils-CBlorucq.js","assets/SceneLayerWorker-kX8AH9jo.js","assets/MeshLocalVertexSpace-BMUeMy-Q.js","assets/vec3-Du_Awc2F.js","assets/projectVectorToVector-CXD7MfO-.js","assets/projectPointToVector-CycyCHNm.js","assets/sphere-DLWu6eKr.js","assets/mat3f64-q3fE-ZOt.js","assets/plane-BkVanVBa.js","assets/mat4f64-Dk4dwAN8.js","assets/quatf64-aQ5IuZRd.js","assets/I3SBinaryReader-BzLC_jxX.js","assets/VertexAttribute-Cq4MnHjR.js","assets/edgeUtils-UqZKTaEh.js","assets/floatRGBA-CkSho6R2.js","assets/NormalAttribute.glsl-D-KYZG2O.js","assets/glsl-BH37Aalp.js","assets/ShaderOutput-DnYY5J1_.js","assets/BindType-BBwFZqyN.js","assets/orientedBoundingBox-B5Hwz8co.js","assets/quat-BKxiWUB9.js","assets/spatialReferenceEllipsoidUtils-B4Hav144.js","assets/computeTranslationToOriginAndRotation-CdTRRE4h.js","assets/popupUtils-AJkLP1Q-.js","assets/associatedFeatureServiceUtils-CsaBvI4C.js","assets/SketchOptions-D7tOgciG.js","assets/geodesicUtils-2qEj9b_s.js","assets/utils-5HDDUgPm.js","assets/quantizationUtils-BdN41_Xc.js","assets/FeatureLayerSource-Di9Oza92.js","assets/meshVertexSpaceUtils-DeJZdyiY.js","assets/External-C--yfaHv.js","assets/MeshTransform-C7H0knU5.js","assets/axisAngleDegrees-DNjRPLaR.js","assets/editingSupport-CpnC6wJb.js","assets/clientSideDefaults-CdZFjr9J.js","assets/QueryEngineCapabilities-B_pTbIiR.js","assets/layersCreator-D9JmvcUB.js","assets/loadUtils-S_rGmvFJ.js","assets/fetchService-Cj3OM0W0.js","assets/lazyLayerLoader-BBFPObMd.js","assets/portalLayers-DledxBIQ.js","assets/saveUtils-ohr6pgPw.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/ImageryTileLayerView2D-DhTmmfzs.js","assets/RasterVFDisplayObject-BJfbW0z7.js","assets/VertexArrayObject-D8BUTeor.js","assets/VertexElementDescriptor-BLyltQyJ.js","assets/dataUtils-o-R90RXP.js","assets/WGLContainer-LmHVZ1Cq.js","assets/dataViewUtils-TvsUr7hm.js","assets/BoundingBox-j-OHa0PB.js","assets/ProgramTemplate-CamO9WjC.js","assets/vec3f32-nZdmKIgz.js","assets/Container-DSpu0Eal.js","assets/config-CIMzMD-H.js","assets/earcut-D9gy186-.js","assets/LayerView-CQVnlvN8.js","assets/rasterUtils-DCGYp7f3.js","assets/VertexStream-BG2WCh16.js","assets/utils-JrJ-1CjI.js","assets/FramebufferObject-B1BskXlu.js","assets/TileContainer-5EG0iL3t.js","assets/rasterProjectionHelper-Cl-9gUCR.js","assets/timeSupport-Cg4c0Evx.js","assets/RefreshableLayerView-CoTae4Wq.js","assets/RasterWorker-BNWwKqqx.js","assets/_commonjsHelpers-DCkdB7M8.js","assets/ElevationLayer-CRpsKT6K.js","assets/WorkerHandle-CDYh7sBm.js","assets/editingTools-DfMreXxC.js","assets/interfaces-Cq9U46yu.js","assets/VerticalOffset.glsl-cgbGV1PN.js","assets/Indices-DeeZVUxP.js","assets/InterleavedLayout-BMgRF_FZ.js","assets/BufferView-zAxR52uW.js","assets/triangle-C_Ho7Jub.js","assets/lineSegment-h-9qhCbx.js","assets/renderState-Y6C4b7xG.js","assets/boundedPlane-HQ4SDTva.js","assets/requestImageUtils-BTsowxiv.js","assets/TextureFormat-1mYWTFa-.js","assets/ShaderBuilder-BhBi3jJv.js","assets/triangulationUtils-B6BpwIGQ.js","assets/deduplicate-41W2Xo8h.js","assets/RibbonLine.glsl-DyGWO2Ae.js","assets/HUDVisibility.glsl-BV6Ui8AW.js","assets/doublePrecisionUtils-B0owpBza.js","assets/hydratedFeatures-W_C6fqOn.js","assets/Octree-si7LJGnM.js","assets/HUDMaterial.glsl-BRP9TDxM.js","assets/NestedMap-GuqgquCN.js","assets/RouteLayerInteraction-CLfXoqFF.js","assets/GraphicsLayer-DoTJE-Vj.js","assets/RouteLayerView2D-DhLx2Fpf.js","assets/GraphicContainer-C5vOLOnx.js","assets/AGraphicContainer-BDJOr37h.js","assets/TechniqueInstance-kKLNFxbl.js","assets/UpdateTracking2D-C6bLgmat.js","assets/FeatureCommandQueue-CQ9Aznlk.js","assets/CIMSymbolHelper-C_-iIFr_.js","assets/BidiEngine-QXap_35O.js","assets/fontUtils-DmUOgodR.js","assets/Rect-BgwV4lPu.js","assets/rasterizingUtils-DZu30vQ7.js","assets/TechniqueType-uMFRS8dR.js","assets/GraphShaderModule-BBarpPRO.js","assets/QueueProcessor-BinXpWME.js","assets/GraphicsView2D-ByVIaOBj.js","assets/OverrideHelper-CGqrUmI_.js","assets/FeatureMetadata-DHjLLq4R.js","assets/queryUtils-DnEZcHAW.js","assets/json-Wa8cmqdu.js","assets/timeSupport-wEUOQSqn.js","assets/TimeOnly-3THQQ8Fr.js","assets/dehydratedFeatures-sbejWfdQ.js","assets/automaticLengthMeasurementUtils-Chx70OkV.js","assets/memoize-DmxaQ-k8.js","assets/geodesicLengthMeasurementUtils-57vjN9kL.js","assets/geometryEngineBase-B0ZyeKAX.js","assets/hydrated-CEf7vDKJ.js","assets/glUtil-Cg71w1wQ.js","assets/automaticAreaMeasurementUtils-vEJrL2eR.js","assets/PointSnappingHint-BfA-sRbc.js","assets/editPlaneUtils-DvTDgLBH.js","assets/ReactiveSet-Cu3n-AJ8.js","assets/SelectedVertexTooltipInfo-PjnX_AnB.js","assets/TranslateTooltipInfo-YsQgswso.js","assets/ExtentScaleTooltipInfo-CCxA1Dyx.js","assets/GraphicManipulator-DJVmIfGe.js","assets/drapedUtils-C15AOIVK.js","assets/KMLLayerView2D-CBBQJ7o6.js","assets/BitmapTechnique-6nI4azvO.js","assets/BitmapContainer-BI_xmSc6.js","assets/MaterialPrograms-DHK_827R.js","assets/webglDeps-DwTwP9Vx.js","assets/testSVGPremultipliedAlpha-DhwBUhb3.js","assets/FeatureLayerView2D-0MmTY_TV.js","assets/AttributeBinsFeatureSet-CL7d-U2a.js","assets/AttributeBinsQuery-nI2H9Fke.js","assets/FixedIntervalBinParameters-BGAbcxrt.js","assets/CircularArray-CujHzHWW.js","assets/SDFHelper-D9zNBCgB.js","assets/parquet-DLKErZGP.js","assets/knowledgegraph-wR0AJIWp.js","assets/arcade-BUWOn_D-.js","assets/unitConversion-CV3rWfTH.js","assets/ImmutableArray-BPVd6ESQ.js","assets/shared-C0pYK880.js","assets/number-DXldYQze.js","assets/WhereClause-tNfuElsK.js","assets/portalUtils-Ds1HFGOV.js","assets/executeQueryForSnapping-BMrwN3MM.js","assets/PooledRBush-Ce0wI0lb.js","assets/optimizedFeatureQueryEngineAdapter-Bd82a8MA.js","assets/QueryEngine-gw3_eh-j.js","assets/WhereClauseCache-DySf_V0x.js","assets/SnappingCandidate-DGkpYqI6.js","assets/MemorySourceWorker-B9BFuzSt.js","assets/sourceUtils-Dm_nxCOC.js","assets/date-Ctp1FiBW.js","assets/MediaLayerView2D-CH80rAWe.js","assets/enums-BRzLM11V.js","assets/GridShader-BdfR2Fn3.js","assets/PieChartMeshWriter-jTthlqjW.js","assets/libtess-CQ1MDdKV.js","assets/utils-by40GJa_.js","assets/grouping-CYhDgqp8.js","assets/OverlayContainer-Ctg4oUkM.js","assets/utils-ehcGqGxa.js","assets/FeaturePipelineWorker-CDuuD5KL.js","assets/MeshWriterRegistry-DuyyDa3v.js","assets/operatorGeodeticDensify-z9ao9-BP.js","assets/geodeticCurveType-CirnHLSB.js","assets/geojson-8Z1-yrws.js","assets/PointCloudWorker-CLdpWtdc.js","assets/uploadAssets-DoFA4ESd.js","assets/meshFeatureAttributes-Ck4iEIwi.js","assets/SourceLayerData-DyXXKuDB.js","assets/VideoLayerView2D-342eC2sW.js","assets/webdocSaveUtils-7bbKU9py.js","assets/basemapUtils-BioY0wiW.js","assets/resourceUtils-DzJsZ28y.js","assets/WFSSourceWorker-BelyhHk8.js","assets/WMSLayerView2D-D16tMBwV.js","assets/ExportStrategy-C3tkL3ul.js","assets/operators-qqEUbP33.js","assets/apiConverter-CwVSb5Jk.js","assets/operatorGeodesicBuffer-9d-Ph0Zn.js","assets/operatorBuffer-D2j0KCRN.js","assets/GeometryCleaner-BEJM7I4l-CZTwpJNJ.js","assets/operatorConvexHull-nV-wrqSB.js","assets/operatorIntersection-DbhwVq8S.js","assets/operatorOffset-LVN8ku9r.js","assets/operatorSimplify-CK5VvXXs.js","assets/operatorUnion-Daywj5N9.js","assets/MeshComponent-VSgHE6bj.js","assets/meshProperties-C4iW0Ukm.js","assets/MeshVertexAttributes-Ccd0U7Co.js","assets/vec4-BNdE_iON.js","assets/loader-D3b73t5c.js","assets/objectResourceUtils-QJb-Ptsg.js","assets/RealisticTree.glsl-DDExtdCc.js","assets/vertexSpaceConversion-Cyco_AuL.js","assets/featureLayerUtils-CBPv59Zt.js","assets/intersectionOperator-NaYauQUF.js","assets/unionOperator-Dr4SW2aI.js","assets/lengthOperator-DAgwruP2.js","assets/bufferOperator-1SfJjmj1.js","assets/geodesicBufferOperator-DB4uJRTK.js","assets/offsetOperator-9axhKI7n.js","assets/simplifyOperator-u82eTsUu.js","assets/convexHullOperator-DMnWFusq.js"])))=>i.map(i=>d[i]);
import{bZ as a,cV as c}from"./index-BuurUjNy.js";function _(t,e){let o;return{loaded:!1,load:()=>o??(o=e().then(n=>{p[t]={loaded:!0,execute:n}}))}}function s(t){return t==null?null:t.toJSON()}const p={disjoint:_("disjoint",()=>a(()=>import("./disjointOperator-CP7-21_d.js"),__vite__mapDeps([0,1,2,3,4,5])).then(t=>t.execute)),intersects:_("intersects",()=>a(()=>import("./intersectsOperator-C5r9_YB6.js"),__vite__mapDeps([6,7,1,2,3,4,5])).then(t=>t.execute)),touches:_("touches",()=>a(()=>import("./touchesOperator-B09VL_hP.js"),__vite__mapDeps([8,9,1,2,3,4,5])).then(t=>t.execute)),crosses:_("crosses",()=>a(()=>import("./crossesOperator-D0h37Q3-.js"),__vite__mapDeps([10,11,1,2,3,4,5])).then(t=>t.execute)),within:_("within",()=>a(()=>import("./withinOperator-BNWPxGPP.js"),__vite__mapDeps([12,13,1,2,3,4,5])).then(t=>t.execute)),contains:_("contains",()=>a(()=>import("./containsOperator-SbYvvEgY.js"),__vite__mapDeps([14,1,2,3,4,5])).then(t=>t.execute)),overlaps:_("overlaps",()=>a(()=>import("./overlapsOperator-Dlr3TvpM.js"),__vite__mapDeps([15,16,1,2,3,4,5])).then(t=>t.execute)),equals:_("equals",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(e=>e.J),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231]));return(e,o)=>t.execute(c(e),c(o))}),relate:_("relate",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(e=>e.$),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231]));return(e,o,n)=>t.execute(c(e),c(o),n)}),intersection:_("intersection",()=>a(()=>import("./intersectionOperator-NaYauQUF.js"),__vite__mapDeps([232,3,4,219,2,1,5])).then(t=>t.execute)),union:_("union",()=>a(()=>import("./unionOperator-Dr4SW2aI.js"),__vite__mapDeps([233,222,2,1,3,4,5])).then(t=>t.executeMany)),difference:_("difference",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(e=>e.F),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231]));return(e,o)=>s(t.execute(c(e),c(o)))}),symmetricDifference:_("symmetricDifference",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(e=>e.a0),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231]));return(e,o)=>s(t.execute(c(e),c(o)))}),clip:_("clip",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(e=>e.z),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231]));return(e,o)=>s(t.execute(c(e),c(o)))}),cut:_("cut",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(e=>e.A),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231]));return(e,o)=>t.execute(c(e),c(o)).map(n=>s(n))}),area:_("area",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(n=>n.x),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231])),{convertFromSpatialReferenceUnit:e,toAreaUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toAreaUnit:r}=await import("./unitConversion-CV3rWfTH.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toAreaUnit:r}},__vite__mapDeps([173,3,4]));return(n,r)=>{const i=t.execute(c(n));return e(n.spatialReference,o(r),i)}}),geodeticArea:_("geodeticArea",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(r=>r.Q),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231])),{convert:e,squareMeters:o,toAreaUnit:n}=await a(async()=>{const{convert:r,squareMeters:i,toAreaUnit:u}=await import("./unitConversion-CV3rWfTH.js").then(E=>E.e);return{convert:r,squareMeters:i,toAreaUnit:u}},__vite__mapDeps([173,3,4]));return await t.load(),(r,i)=>{const u=t.execute(c(r));return e(o,n(i),u)}}),length:_("length",async()=>{const t=await a(()=>import("./lengthOperator-DAgwruP2.js"),__vite__mapDeps([234,3,4,5,1,2])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CV3rWfTH.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([173,3,4]));return(n,r)=>{const i=t.execute(n);return e(n.spatialReference,o(r),i)}}),geodeticLength:_("geodeticLength",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(r=>r.Y),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-CV3rWfTH.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([173,3,4]));return await t.load(),(r,i)=>{const u=t.execute(c(r));return e(o,n(i),u)}}),distance:_("distance",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(n=>n.H),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CV3rWfTH.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([173,3,4]));return(n,r,i)=>{const u=t.execute(c(n),c(r));return e(n.spatialReference,o(i),u)}}),densify:_("densify",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(n=>n.E),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CV3rWfTH.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([173,3,4]));return(n,r,i)=>(r=e(o(i),n.spatialReference,r),s(t.execute(c(n),r)))}),geodeticDensify:_("geodeticDensify",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(r=>r.X),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-CV3rWfTH.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([173,3,4]));return await t.load(),(r,i,u)=>(i=e(n(u),o,i),s(t.execute(c(r),i)))}),generalize:_("generalize",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(n=>n.N),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CV3rWfTH.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([173,3,4]));return(n,r,i,u)=>(r=e(o(i),n.spatialReference,r),s(t.execute(c(n),r,u)))}),buffer:_("buffer",async()=>{const t=await a(()=>import("./bufferOperator-1SfJjmj1.js"),__vite__mapDeps([235,3,4,216,2,1,217,5])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CV3rWfTH.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([173,3,4]));return(n,r,i)=>(r=e(o(i),n.spatialReference,r),t.execute(n,r))}),geodesicBuffer:_("geodesicBuffer",async()=>{const t=await a(()=>import("./geodesicBufferOperator-DB4uJRTK.js"),__vite__mapDeps([236,3,4,215,2,200])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-CV3rWfTH.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([173,3,4]));return await t.load(),(r,i,u)=>(i=e(n(u),o,i),t.execute(r,i))}),offset:_("offset",async()=>{const t=await a(()=>import("./offsetOperator-9axhKI7n.js"),__vite__mapDeps([237,3,4,220,2,1,5])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CV3rWfTH.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([173,3,4]));return(n,r,i,u)=>(r=e(o(i),n.spatialReference,r),t.execute(n,r,u))}),rotate:_("rotate",async()=>{const t=await a(()=>import("./operators-qqEUbP33.js").then(o=>o.Z),__vite__mapDeps([213,3,4,2,1,214,5,215,200,199,216,217,218,11,219,7,220,16,221,9,222,13])),{default:e}=await a(async()=>{const{default:o}=await import("./operators-qqEUbP33.js").then(n=>n.Y);return{default:o}},__vite__mapDeps([213,3,4,2,1,214,5,215,200,199,216,217,218,11,219,7,220,16,221,9,222,13]));return(o,n,r,i)=>{const u=new e().rotate(n,r,i);return s(t.execute(c(o),u))}}),centroid:_("centroid",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(e=>e.y),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231]));return e=>s(t.execute(c(e)))}),labelPoint:_("labelPoint",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(e=>e.Z),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231]));return e=>s(t.execute(c(e)))}),simplify:_("simplify",()=>a(()=>import("./simplifyOperator-u82eTsUu.js"),__vite__mapDeps([238,221,2,1,3,4,5])).then(t=>t.execute)),isSimple:_("isSimple",()=>a(()=>import("./simplifyOperator-u82eTsUu.js"),__vite__mapDeps([238,221,2,1,3,4,5])).then(t=>t.isSimple)),convexHull:_("convexHull",()=>a(()=>import("./convexHullOperator-DMnWFusq.js"),__vite__mapDeps([239,218,2,1,3,4,5])).then(t=>t.execute)),getNearestCoordinate:_("getNearestCoordinate",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(e=>e._),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231]));return(e,o,n)=>{const r=t.getNearestCoordinate(c(e),c(o),n);return{...r,coordinate:s(r.coordinate)}}}),getNearestVertex:_("getNearestVertex",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CUYQSLQb.js").then(e=>e._),__vite__mapDeps([17,3,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,2,200,201,202,203,204,205,206,207,208,209,210,211,212,1,5,213,214,215,216,217,218,11,219,7,220,16,221,9,222,13,223,224,225,226,227,228,229,230,231]));return(e,o)=>{const n=t.getNearestVertex(c(e),c(o));return{...n,coordinate:s(n.coordinate)}}})};function d(t,e){const o=p[t];return o.loaded?o.execute.apply(void 0,e):o.load().then(()=>d(t,e))}export{d as invokeGeometryOp};
